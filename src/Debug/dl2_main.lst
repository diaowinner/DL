SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Users\Administrator\Desktop\DL-master\src\dl2_main.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      dl2_main.c     1    /******************************************************************
      dl2_main.c     2    * DLiterature  v2.1                                               *
      dl2_main.c     3    *******************************************************************
      dl2_main.c     4    *    Copyright 2013 Anderain Lovelace                             *
      dl2_main.c     5    *    anderain.develop@gmail.com                                   *
      dl2_main.c     6    *******************************************************************/
      dl2_main.c     7    
      dl2_main.c     8    #include "dl2_all.h"
      dl2_main.c     9    
      dl2_main.c    10    #define SCR_WIDTH               128
      dl2_main.c    11    #define SCR_HEIGHT              64
      dl2_main.c    12    
      dl2_main.c    13    #define MARK_SIZE               5
      dl2_main.c    14    
      dl2_main.c    15    #define PAGE_MAX                (9999)
      dl2_main.c    16    #define BUFFER_SIZE             (20*1024)
      dl2_main.c    17    int     font_modle = 12;
      dl2_main.c    18    word            *       page_offset                     ;
      dl2_main.c    19    uint                    page_size       =       0       ;
      dl2_main.c    20    uint                    page_now        =       0       ;
      dl2_main.c    21    uint                    file_size       =       0       ;
      dl2_main.c    22    uint                    file_pos        =       0       ;
      dl2_main.c    23    const char      *       file_name                       ;
      dl2_main.c    24    int                             fh_txt          =       0       ;
      dl2_main.c    25    long                    mark[MARK_SIZE]         ;
      dl2_main.c    26    
      dl2_main.c    27    
      dl2_main.c    28    const char * MAIN_MENU_TEXT[] = {" 打开闪存文件 "," 打开SD卡文件 "," 更改阅读字体 "," 关于 "};
      dl2_main.c    29    const char * READ_MENU_TEXT[] = { " 更改字体 "," 跳页 "," 读取书签 "," 保存书签 "," 退出 "};
      dl2_main.c    30    
      dl2_main.c    31    void save_page_mark ()
P   00000000              _save_page_mark:                 ; function: save_page_mark
                                                           ; frame size=40
                                                           ; used runtime library name:
                                                           ; __slow_strcpy
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 4F22                   STS.L       PR,@-R15
      dl2_main.c    32    {
      dl2_main.c    33            char    mark_file_name[32];
      dl2_main.c    34            int             file;
      dl2_main.c    35            
      dl2_main.c    36            strcpy(mark_file_name,file_name);
    00000004 D245                   MOV.L       L774+4,R2  ; _file_name
    00000006 7FE0                   ADD         #-32,R15
    00000008 D345                   MOV.L       L774+8,R3  ; __slow_strcpy
    0000000A 6122                   MOV.L       @R2,R1
    0000000C 430B                   JSR         @R3
    0000000E 60F3                   MOV         R15,R0
      dl2_main.c    37            memcpy(strstr(mark_file_name,".txt"),".svt",4);
    00000010 D544                   MOV.L       L774+12,R5 ; L406
    00000012 D345                   MOV.L       L774+16,R3 ; _strstr
    00000014 430B                   JSR         @R3
    00000016 64F3                   MOV         R15,R4
    00000018 D544                   MOV.L       L774+20,R5 ; L407




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000001A 6403                   MOV         R0,R4
    0000001C D244                   MOV.L       L774+24,R2 ; _memcpy
    0000001E 420B                   JSR         @R2
    00000020 E604                   MOV         #4,R6
      dl2_main.c    38    
      dl2_main.c    39            file = open_file(mark_file_name,_OPENMODE_WRITE);
    00000022 E502                   MOV         #2,R5
    00000024 D343                   MOV.L       L774+28,R3 ; _open_file
    00000026 430B                   JSR         @R3
    00000028 64F3                   MOV         R15,R4
    0000002A 6E03                   MOV         R0,R14
      dl2_main.c    40            
      dl2_main.c    41            write_file(file,&page_now,sizeof(int));
    0000002C D542                   MOV.L       L774+32,R5 ; _page_now
    0000002E E604                   MOV         #4,R6
    00000030 D242                   MOV.L       L774+36,R2 ; _Bfile_WriteFile
    00000032 420B                   JSR         @R2
    00000034 6403                   MOV         R0,R4
      dl2_main.c    42            write_file(file,mark,sizeof(int)*MARK_SIZE);
    00000036 E614                   MOV         #20,R6
    00000038 D541                   MOV.L       L774+40,R5 ; _mark
    0000003A D340                   MOV.L       L774+36,R3 ; _Bfile_WriteFile
    0000003C 430B                   JSR         @R3
    0000003E 64E3                   MOV         R14,R4
      dl2_main.c    43    
      dl2_main.c    44            close_file(file);
    00000040 D240                   MOV.L       L774+44,R2 ; _Bfile_CloseFile
    00000042 420B                   JSR         @R2
    00000044 64E3                   MOV         R14,R4
      dl2_main.c    45    }
    00000046 7F20                   ADD         #32,R15
    00000048 4F26                   LDS.L       @R15+,PR
    0000004A 000B                   RTS
    0000004C 6EF6                   MOV.L       @R15+,R14
      dl2_main.c    46    
      dl2_main.c    47    
      dl2_main.c    48    void read_page_mark ()
    0000004E              _read_page_mark:                 ; function: read_page_mark
                                                           ; frame size=104
                                                           ; used runtime library name:
                                                           ; __slow_strcpy
    0000004E 2FE6                   MOV.L       R14,@-R15
    00000050 4F22                   STS.L       PR,@-R15
    00000052 7FA0                   ADD         #-96,R15
      dl2_main.c    49    {
      dl2_main.c    50            char    mark_file_name[32];
      dl2_main.c    51            int             file;
      dl2_main.c    52            
      dl2_main.c    53            strcpy(mark_file_name,file_name);
    00000054 D231                   MOV.L       L774+4,R2  ; _file_name
    00000056 60F3                   MOV         R15,R0
    00000058 D331                   MOV.L       L774+8,R3  ; __slow_strcpy
    0000005A 6122                   MOV.L       @R2,R1
    0000005C 430B                   JSR         @R3
    0000005E 7040                   ADD         #64,R0
      dl2_main.c    54            memcpy(strstr(mark_file_name,".txt"),".svt",4);
    00000060 D530                   MOV.L       L774+12,R5 ; L406




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000062 64F3                   MOV         R15,R4
    00000064 D330                   MOV.L       L774+16,R3 ; _strstr
    00000066 430B                   JSR         @R3
    00000068 7440                   ADD         #64,R4
    0000006A 6403                   MOV         R0,R4
    0000006C D52F                   MOV.L       L774+20,R5 ; L407
    0000006E D230                   MOV.L       L774+24,R2 ; _memcpy
    00000070 420B                   JSR         @R2
    00000072 E604                   MOV         #4,R6
      dl2_main.c    55    
      dl2_main.c    56            file = open_file(mark_file_name,_OPENMODE_READ);
    00000074 D32F                   MOV.L       L774+28,R3 ; _open_file
    00000076 E501                   MOV         #1,R5
    00000078 64F3                   MOV         R15,R4
    0000007A 430B                   JSR         @R3
    0000007C 7440                   ADD         #64,R4
    0000007E 6E03                   MOV         R0,R14
      dl2_main.c    57            
      dl2_main.c    58            if (file<0)
    00000080 4E11                   CMP/PZ      R14
    00000082 8915                   BT          L637
      dl2_main.c    59            {
      dl2_main.c    60                    int     i;
      dl2_main.c    61                    fontc   ffname[32];
      dl2_main.c    62                    page_now = 0;
    00000084 D32C                   MOV.L       L774+32,R3 ; _page_now
    00000086 E500                   MOV         #0,R5
    00000088 D62D                   MOV.L       L774+40,R6 ; _mark
    0000008A 2352                   MOV.L       R5,@R3
    0000008C 6463                   MOV         R6,R4
    0000008E 6763                   MOV         R6,R7
    00000090 7714                   ADD         #20,R7
      dl2_main.c    63                    for(i=0;i<MARK_SIZE;++i)
    00000092              L638:                             
      dl2_main.c    64                    {
      dl2_main.c    65                            mark[i] = 0;
    00000092 2452                   MOV.L       R5,@R4
    00000094 7404                   ADD         #4,R4
    00000096 3472                   CMP/HS      R7,R4
    00000098 8BFB                   BF          L638
      dl2_main.c    66                    }
      dl2_main.c    67                    char_to_font(mark_file_name,ffname);
    0000009A 65F3                   MOV         R15,R5
    0000009C D32A                   MOV.L       L774+48,R3 ; _char_to_font
    0000009E 64F3                   MOV         R15,R4
    000000A0 430B                   JSR         @R3
    000000A2 7440                   ADD         #64,R4
      dl2_main.c    68                    i = create_file(ffname,sizeof(int)*(MARK_SIZE+1));
    000000A4 D229                   MOV.L       L774+52,R2 ; _Bfile_CreateFile
    000000A6 E518                   MOV         #24,R5
    000000A8 420B                   JSR         @R2
    000000AA 64F3                   MOV         R15,R4
    000000AC A00F                   BRA         L639
    000000AE 0009                   NOP
    000000B0              L637:                             
      dl2_main.c    69            }
      dl2_main.c    70            else




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      dl2_main.c    71            {
      dl2_main.c    72                    read_file(file,&page_now,sizeof(int),0);
    000000B0 D521                   MOV.L       L774+32,R5 ; _page_now
    000000B2 E700                   MOV         #0,R7
    000000B4 D226                   MOV.L       L774+56,R2 ; _Bfile_ReadFile
    000000B6 E604                   MOV         #4,R6
    000000B8 420B                   JSR         @R2
    000000BA 64E3                   MOV         R14,R4
      dl2_main.c    73                    read_file(file,mark,sizeof(int)*MARK_SIZE,sizeof(int));
    000000BC D520                   MOV.L       L774+40,R5 ; _mark
    000000BE E704                   MOV         #4,R7
    000000C0 D323                   MOV.L       L774+56,R3 ; _Bfile_ReadFile
    000000C2 E614                   MOV         #20,R6
    000000C4 430B                   JSR         @R3
    000000C6 64E3                   MOV         R14,R4
      dl2_main.c    74                    close_file(file);
    000000C8 D21E                   MOV.L       L774+44,R2 ; _Bfile_CloseFile
    000000CA 420B                   JSR         @R2
    000000CC 64E3                   MOV         R14,R4
    000000CE              L639:                             
      dl2_main.c    75            }
      dl2_main.c    76    }
    000000CE 7F60                   ADD         #96,R15
    000000D0 4F26                   LDS.L       @R15+,PR
    000000D2 000B                   RTS
    000000D4 6EF6                   MOV.L       @R15+,R14
      dl2_main.c    77    
      dl2_main.c    78    int split_page ()
    000000D6              _split_page:                     ; function: split_page
                                                           ; frame size=36
    000000D6 2FE6                   MOV.L       R14,@-R15
    000000D8 2FD6                   MOV.L       R13,@-R15
    000000DA EE00                   MOV         #0,R14
      dl2_main.c    79    {
      dl2_main.c    80            uchar           *p;
      dl2_main.c    81            uchar           *buf;
      dl2_main.c    82            int                     bytes_read,page_bytes;
      dl2_main.c    83            int                     x,y;
      dl2_main.c    84            BOOL            last_page;
      dl2_main.c    85    
      dl2_main.c    86            page_size               = 0;
      dl2_main.c    87            file_pos                = 0;
    000000DC D31F                   MOV.L       L774+68,R3 ; _file_pos
    000000DE 2FC6                   MOV.L       R12,@-R15
    000000E0 2FB6                   MOV.L       R11,@-R15
    000000E2 2FA6                   MOV.L       R10,@-R15
    000000E4 2F96                   MOV.L       R9,@-R15
    000000E6 2F86                   MOV.L       R8,@-R15
    000000E8 4F22                   STS.L       PR,@-R15
    000000EA E840                   MOV         #64,R8
    000000EC DA19                   MOV.L       L774+60,R10; _page_size
    000000EE 7FFC                   ADD         #-4,R15
    000000F0 DB19                   MOV.L       L774+64,R11; _usr_font
    000000F2 6D83                   MOV         R8,R13
      dl2_main.c    88            file_size               = get_file_size(fh_txt);
    000000F4 D21A                   MOV.L       L774+72,R2 ; _fh_txt
    000000F6 7D40                   ADD         #64,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000F8 2AE2                   MOV.L       R14,@R10
    000000FA 23E2                   MOV.L       R14,@R3
    000000FC D119                   MOV.L       L774+76,R1 ; _Bfile_GetFileSize
    000000FE 410B                   JSR         @R1
    00000100 6422                   MOV.L       @R2,R4
    00000102 D319                   MOV.L       L774+80,R3 ; _file_size
      dl2_main.c    89            buf                             = (uchar*)calloc(BUFFER_SIZE-1,1);
    00000104 9408                   MOV.W       L774,R4    ; H'4FFF
    00000106 2302                   MOV.L       R0,@R3
    00000108 D218                   MOV.L       L774+84,R2 ; _calloc
    0000010A 420B                   JSR         @R2
    0000010C E501                   MOV         #1,R5
    0000010E 6C03                   MOV         R0,R12
      dl2_main.c    90            if (buf==NULL) return -2;
    00000110 2CC8                   TST         R12,R12
    00000112 8B2D                   BF          L640
    00000114 A09B                   BRA         L641
    00000116 E0FE                   MOV         #-2,R0
    00000118              L774:                             
    00000118 4FFF                   .DATA.W     H'4FFF
    0000011A 0000                   .DATA.W     0
    0000011C <00000000>             .DATA.L     _file_name
    00000120 <00000000>             .DATA.L     __slow_strcpy
    00000124 <00000000>             .DATA.L     L406
    00000128 <00000000>             .DATA.L     _strstr
    0000012C <00000000>             .DATA.L     L407
    00000130 <00000000>             .DATA.L     _memcpy
    00000134 <00000000>             .DATA.L     _open_file
    00000138 <00000000>             .DATA.L     _page_now
    0000013C <00000000>             .DATA.L     _Bfile_WriteFile
    00000140 <00000000>             .DATA.L     _mark
    00000144 <00000000>             .DATA.L     _Bfile_CloseFile
    00000148 <00000000>             .DATA.L     _char_to_font
    0000014C <00000000>             .DATA.L     _Bfile_CreateFile
    00000150 <00000000>             .DATA.L     _Bfile_ReadFile
    00000154 <00000000>             .DATA.L     _page_size
    00000158 <00000000>             .DATA.L     _usr_font
    0000015C <00000000>             .DATA.L     _file_pos
    00000160 <00000000>             .DATA.L     _fh_txt
    00000164 <00000000>             .DATA.L     _Bfile_GetFileSize
    00000168 <00000000>             .DATA.L     _file_size
    0000016C <00000000>             .DATA.L     _calloc
    00000170              L640:                             
      dl2_main.c    91    
      dl2_main.c    92            select_font (usr_font);
    00000170 D241                   MOV.L       L775+6,R2  ; _select_font
    00000172 420B                   JSR         @R2
    00000174 64B2                   MOV.L       @R11,R4
      dl2_main.c    93            
      dl2_main.c    94            while(file_pos < file_size-1)
    00000176 A05E                   BRA         L642
    00000178 0009                   NOP
    0000017A              L643:                             
      dl2_main.c    95            {
      dl2_main.c    96                    if (file_size - file_pos > BUFFER_SIZE)
    0000017A 62F2                   MOV.L       @R15,R2
    0000017C 9379                   MOV.W       L775,R3    ; H'5000




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000017E 3298                   SUB         R9,R2
    00000180 3236                   CMP/HI      R3,R2
    00000182 8B08                   BF          L644
      dl2_main.c    97                            bytes_read = read_file(fh_txt,buf,BUFFER_SIZE,file_pos);
    00000184 D13D                   MOV.L       L775+10,R1 ; _fh_txt
    00000186 6793                   MOV         R9,R7
    00000188 D23D                   MOV.L       L775+14,R2 ; _Bfile_ReadFile
    0000018A 6633                   MOV         R3,R6
    0000018C 65C3                   MOV         R12,R5
    0000018E 420B                   JSR         @R2
    00000190 6412                   MOV.L       @R1,R4
    00000192 A008                   BRA         L770
    00000194 0009                   NOP
    00000196              L644:                             
      dl2_main.c    98                    else
      dl2_main.c    99                            bytes_read = read_file(fh_txt,buf,file_size - file_pos,file_pos);
    00000196 6793                   MOV         R9,R7
    00000198 66F2                   MOV.L       @R15,R6
    0000019A 65C3                   MOV         R12,R5
    0000019C D237                   MOV.L       L775+10,R2 ; _fh_txt
    0000019E 3698                   SUB         R9,R6
    000001A0 D137                   MOV.L       L775+14,R1 ; _Bfile_ReadFile
    000001A2 410B                   JSR         @R1
    000001A4 6422                   MOV.L       @R2,R4
    000001A6              L770:                             
      dl2_main.c   100    
      dl2_main.c   101                    buf[bytes_read] = '\0';
      dl2_main.c   102                    
      dl2_main.c   103                    p = buf;
    000001A6 64C3                   MOV         R12,R4
    000001A8 0CE4                   MOV.B       R14,@(R0,R12)
      dl2_main.c   104                    x = 0,y = 0;
    000001AA 66E3                   MOV         R14,R6
    000001AC 67E3                   MOV         R14,R7
      dl2_main.c   105                    
      dl2_main.c   106                    bytes_read = 0;
    000001AE 69E3                   MOV         R14,R9
      dl2_main.c   107                    page_bytes = 0;
    000001B0 65E3                   MOV         R14,R5
      dl2_main.c   108    
      dl2_main.c   109                    while(1)
    000001B2              L647:                             
      dl2_main.c   110                    {
      dl2_main.c   111                            if ((*p) & 0x80)
    000001B2 6240                   MOV.B       @R4,R2
    000001B4 622C                   EXTU.B      R2,R2
    000001B6 22D8                   TST         R13,R2
    000001B8 8905                   BT          L648
      dl2_main.c   112                            {
      dl2_main.c   113    #ifdef SPLIT_TEST
      dl2_main.c   114                                    print_chs_char(x,y,0,*p,*(p+1));        
      dl2_main.c   115    #endif
      dl2_main.c   116                                    p+=2;
    000001BA 7402                   ADD         #2,R4
      dl2_main.c   117                                    page_bytes+=2;
      dl2_main.c   118                                    x += usr_font->cwidth;
    000001BC 62B2                   MOV.L       @R11,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001BE 7502                   ADD         #2,R5
    000001C0 5324                   MOV.L       @(16,R2),R3
    000001C2 A00E                   BRA         L649
    000001C4 363C                   ADD         R3,R6
    000001C6              L648:                             
      dl2_main.c   119                            }
      dl2_main.c   120                            else if ((*p)=='\n')
    000001C6 6040                   MOV.B       @R4,R0
    000001C8 600C                   EXTU.B      R0,R0
    000001CA 880A                   CMP/EQ      #10,R0
    000001CC 8B01                   BF          L650
    000001CE A006                   BRA         L571
      dl2_main.c   121                            {
      dl2_main.c   122                                    x = SCR_WIDTH;
    000001D0 66D3                   MOV         R13,R6
    000001D2              L650:                             
      dl2_main.c   123                                    p++;
      dl2_main.c   124                                    page_bytes++;
      dl2_main.c   125                            }
      dl2_main.c   126                            else if (*p == 0)
    000001D2 6240                   MOV.B       @R4,R2
    000001D4 2228                   TST         R2,R2
    000001D6 8B02                   BF          L571
      dl2_main.c   127                            {
      dl2_main.c   128                                    if (last_page)
      dl2_main.c   129                                    {
      dl2_main.c   130                                            x = SCR_WIDTH,y = SCR_HEIGHT;
    000001D8 66D3                   MOV         R13,R6
    000001DA A002                   BRA         L649
    000001DC 6783                   MOV         R8,R7
    000001DE              L571:
      dl2_main.c   131                                    }
      dl2_main.c   132                                    else
      dl2_main.c   133                                            break;
      dl2_main.c   134                            }
      dl2_main.c   135                            else
      dl2_main.c   136                            {
      dl2_main.c   137    #ifdef SPLIT_TEST
      dl2_main.c   138                                    print_asc_char(x,y,0,*p);       
      dl2_main.c   139    #endif
      dl2_main.c   140                                    ++p;
    000001DE 7401                   ADD         #1,R4
      dl2_main.c   141                                    page_bytes++;
    000001E0 7501                   ADD         #1,R5
    000001E2              L649:                             
      dl2_main.c   142                            }
      dl2_main.c   143                            if (x+usr_font->cwidth > SCR_WIDTH)
    000001E2 63B2                   MOV.L       @R11,R3
    000001E4 5234                   MOV.L       @(16,R3),R2
    000001E6 326C                   ADD         R6,R2
    000001E8 32D6                   CMP/HI      R13,R2
    000001EA 8BE2                   BF          L647
      dl2_main.c   144                            {
      dl2_main.c   145                                    x = 0;
      dl2_main.c   146                                    y += usr_font->height;
    000001EC 62B2                   MOV.L       @R11,R2
    000001EE 5326                   MOV.L       @(24,R2),R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001F0 2F32                   MOV.L       R3,@R15
    000001F2 373C                   ADD         R3,R7
      dl2_main.c   147                                    if (y + usr_font->height > SCR_HEIGHT)
    000001F4 337C                   ADD         R7,R3
    000001F6 3386                   CMP/HI      R8,R3
    000001F8 8FDB                   BF/S        L647
    000001FA 66E3                   MOV         R14,R6
      dl2_main.c   148                                    {
      dl2_main.c   149                                            // page_end
      dl2_main.c   150                                            y = 0;
      dl2_main.c   151                                            bytes_read += page_bytes;
      dl2_main.c   152                                            // save page offset
      dl2_main.c   153                                            if (page_size>=PAGE_MAX)
    000001FC 923A                   MOV.W       L775+2,R2  ; H'270F
    000001FE 67E3                   MOV         R14,R7
    00000200 63A2                   MOV.L       @R10,R3
    00000202 3322                   CMP/HS      R2,R3
    00000204 8F05                   BF/S        L659
    00000206 395C                   ADD         R5,R9
      dl2_main.c   154                                            {
      dl2_main.c   155                                                    free(buf);      
    00000208 D31E                   MOV.L       L775+18,R3 ; _free
    0000020A 430B                   JSR         @R3
    0000020C 64C3                   MOV         R12,R4
      dl2_main.c   156                                                    return -1;
    0000020E A01E                   BRA         L641
    00000210 E0FF                   MOV         #-1,R0
    00000212              L659:                             
      dl2_main.c   157                                            }
      dl2_main.c   158    #ifdef SPLIT_TEST
      dl2_main.c   159                                            waitkey();all_clr();
      dl2_main.c   160    #endif
      dl2_main.c   161                                            page_offset[page_size++] = page_bytes;
    00000212 62A2                   MOV.L       @R10,R2
    00000214 D31C                   MOV.L       L775+22,R3 ; _page_offset
    00000216 7201                   ADD         #1,R2
    00000218 2A22                   MOV.L       R2,@R10
    0000021A 72FF                   ADD         #-1,R2
    0000021C 6032                   MOV.L       @R3,R0
    0000021E 4200                   SHLL        R2
    00000220 0255                   MOV.W       R5,@(R0,R2)
      dl2_main.c   162                                            page_bytes = 0;
      dl2_main.c   163                                            if (*p==0) break;
    00000222 6240                   MOV.B       @R4,R2
    00000224 2228                   TST         R2,R2
    00000226 8FC4                   BF/S        L647
    00000228 65E3                   MOV         R14,R5
      dl2_main.c   164                                    }
      dl2_main.c   165                            }// if
      dl2_main.c   166                    }
      dl2_main.c   167                    if (bytes_read==0)
    0000022A 2998                   TST         R9,R9
    0000022C 8903                   BT          L642
      dl2_main.c   168                            last_page = TRUE;
      dl2_main.c   169                    else
      dl2_main.c   170                            file_pos += bytes_read;
    0000022E D317                   MOV.L       L775+26,R3 ; _file_pos




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000230 6132                   MOV.L       @R3,R1
    00000232 319C                   ADD         R9,R1
    00000234 2312                   MOV.L       R1,@R3
    00000236              L642:                             
    00000236 D315                   MOV.L       L775+26,R3 ; _file_pos
    00000238 D115                   MOV.L       L775+30,R1 ; _file_size
    0000023A 6932                   MOV.L       @R3,R9
    0000023C 6212                   MOV.L       @R1,R2
    0000023E 2F22                   MOV.L       R2,@R15
    00000240 72FF                   ADD         #-1,R2
    00000242 3922                   CMP/HS      R2,R9
    00000244 8B99                   BF          L643
      dl2_main.c   171            }
      dl2_main.c   172            free(buf);
    00000246 D30F                   MOV.L       L775+18,R3 ; _free
    00000248 430B                   JSR         @R3
    0000024A 64C3                   MOV         R12,R4
      dl2_main.c   173            return 0;
    0000024C E000                   MOV         #0,R0
      dl2_main.c   174    }
    0000024E              L641:                             
    0000024E 7F04                   ADD         #4,R15
    00000250 4F26                   LDS.L       @R15+,PR
    00000252 68F6                   MOV.L       @R15+,R8
    00000254 69F6                   MOV.L       @R15+,R9
    00000256 6AF6                   MOV.L       @R15+,R10
    00000258 6BF6                   MOV.L       @R15+,R11
    0000025A 6CF6                   MOV.L       @R15+,R12
    0000025C 6DF6                   MOV.L       @R15+,R13
    0000025E 000B                   RTS
    00000260 6EF6                   MOV.L       @R15+,R14
      dl2_main.c   175    
      dl2_main.c   176    long get_page_offset ()
    00000262              _get_page_offset:                ; function: get_page_offset
                                                           ; frame size=4
      dl2_main.c   177    {
      dl2_main.c   178            int offset = 0,i;
    00000262 E700                   MOV         #0,R7
    00000264 D108                   MOV.L       L775+22,R1 ; _page_offset
    00000266 6673                   MOV         R7,R6
    00000268 2FD6                   MOV.L       R13,@-R15
      dl2_main.c   179            for (i=0;i<page_now;++i)
    0000026A 6573                   MOV         R7,R5
    0000026C DD09                   MOV.L       L775+34,R13; _page_now
    0000026E A019                   BRA         L663
    00000270 6473                   MOV         R7,R4
    00000272              L775:                             
    00000272 5000                   .DATA.W     H'5000
    00000274 270F                   .DATA.W     H'270F
    00000276 0000                   .DATA.W     0
    00000278 <00000000>             .DATA.L     _select_font
    0000027C <00000000>             .DATA.L     _fh_txt
    00000280 <00000000>             .DATA.L     _Bfile_ReadFile
    00000284 <00000000>             .DATA.L     _free
    00000288 <00000000>             .DATA.L     _page_offset
    0000028C <00000000>             .DATA.L     _file_pos
    00000290 <00000000>             .DATA.L     _file_size




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000294 <00000000>             .DATA.L     _page_now
    00000298              L664:                             
      dl2_main.c   180            {
      dl2_main.c   181                    offset+=page_offset[i]; 
    00000298 6012                   MOV.L       @R1,R0
    0000029A 7501                   ADD         #1,R5
    0000029C 024D                   MOV.W       @(R0,R4),R2
    0000029E 7402                   ADD         #2,R4
    000002A0 622D                   EXTU.W      R2,R2
    000002A2 362C                   ADD         R2,R6
    000002A4              L663:                             
    000002A4 63D2                   MOV.L       @R13,R3
    000002A6 3532                   CMP/HS      R3,R5
    000002A8 8BF6                   BF          L664
      dl2_main.c   182            }
      dl2_main.c   183            return offset;
    000002AA 6063                   MOV         R6,R0
      dl2_main.c   184    }
    000002AC 000B                   RTS
    000002AE 6DF6                   MOV.L       @R15+,R13
      dl2_main.c   185    
      dl2_main.c   186    int select_page_mark (const char * title)
    000002B0              _select_page_mark:               ; function: select_page_mark
                                                           ; frame size=188
    000002B0 2FE6                   MOV.L       R14,@-R15
    000002B2 2FD6                   MOV.L       R13,@-R15
    000002B4 2FC6                   MOV.L       R12,@-R15
    000002B6 EC01                   MOV         #1,R12
      dl2_main.c   187    {
      dl2_main.c   188            int                             left = 64-get_str_width(title)/2,index = 0;
    000002B8 D33D                   MOV.L       L776+16,R3 ; _get_str_width
    000002BA 2FB6                   MOV.L       R11,@-R15
    000002BC 2FA6                   MOV.L       R10,@-R15
    000002BE 2F96                   MOV.L       R9,@-R15
    000002C0 2F86                   MOV.L       R8,@-R15
    000002C2 E800                   MOV         #0,R8
    000002C4 DB39                   MOV.L       L776+12,R11; _sys_font
    000002C6 4F22                   STS.L       PR,@-R15
    000002C8 906A                   MOV.W       L776,R0    ; H'FF74
    000002CA 3F0C                   ADD         R0,R15
    000002CC 430B                   JSR         @R3
    000002CE 1F41                   MOV.L       R4,@(4,R15)
    000002D0 6383                   MOV         R8,R3
    000002D2 3307                   CMP/GT      R0,R3
    000002D4 303E                   ADDC        R3,R0
    000002D6 4021                   SHAR        R0
    000002D8 600B                   NEG         R0,R0
    000002DA 7040                   ADD         #64,R0
    000002DC 1F02                   MOV.L       R0,@(8,R15)
    000002DE 6D33                   MOV         R3,R13
      dl2_main.c   189            BOOL                    redraw = TRUE;
      dl2_main.c   190            char                    buf[128];
      dl2_main.c   191            unsigned int    key;
      dl2_main.c   192    
      dl2_main.c   193            select_font(sys_font);
    000002E0 D334                   MOV.L       L776+20,R3 ; _select_font
    000002E2 6EC3                   MOV         R12,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002E4 430B                   JSR         @R3
    000002E6 64B2                   MOV.L       @R11,R4
      dl2_main.c   194            all_clr();
    000002E8 D233                   MOV.L       L776+24,R2 ; _Bdisp_AllClr_VRAM
    000002EA 420B                   JSR         @R2
    000002EC 0009                   NOP
      dl2_main.c   195            print_chs_str(left,0,0,title);
    000002EE 6683                   MOV         R8,R6
    000002F0 D332                   MOV.L       L776+28,R3 ; _print_chs_str
    000002F2 6583                   MOV         R8,R5
    000002F4 57F1                   MOV.L       @(4,R15),R7
    000002F6 430B                   JSR         @R3
    000002F8 54F2                   MOV.L       @(8,R15),R4
      dl2_main.c   196            while(1)
    000002FA              L667:                             
      dl2_main.c   197            {
      dl2_main.c   198                    if (redraw)
    000002FA 2EE8                   TST         R14,R14
    000002FC 8925                   BT          L668
      dl2_main.c   199                    {
      dl2_main.c   200                            int i,y=sys_font->height+4,x=0;
    000002FE 6AB2                   MOV.L       @R11,R10
    00000300 5AA6                   MOV.L       @(24,R10),R10
    00000302 7A04                   ADD         #4,R10
      dl2_main.c   201                            for (i=0;i<MARK_SIZE;++i,y+=sys_font->height)
    00000304 A01D                   BRA         L669
    00000306 6E83                   MOV         R8,R14
    00000308              L670:                             
      dl2_main.c   202                            {
      dl2_main.c   203                                    sprintf(buf," -%d- %04d/%04d  ",i,mark[i]+1,page_size);
    00000308 D32D                   MOV.L       L776+32,R3 ; _page_size
    0000030A 61E3                   MOV         R14,R1
    0000030C D02D                   MOV.L       L776+36,R0 ; _mark
    0000030E 69F3                   MOV         R15,R9
    00000310 6232                   MOV.L       @R3,R2
    00000312 4108                   SHLL2       R1
    00000314 2F26                   MOV.L       R2,@-R15
    00000316 790C                   ADD         #12,R9
    00000318 D32C                   MOV.L       L776+44,R3 ; _sprintf
    0000031A 021E                   MOV.L       @(R0,R1),R2
    0000031C D12A                   MOV.L       L776+40,R1 ; L457
    0000031E 7201                   ADD         #1,R2
    00000320 2F26                   MOV.L       R2,@-R15
    00000322 2FE6                   MOV.L       R14,@-R15
    00000324 2F16                   MOV.L       R1,@-R15
    00000326 430B                   JSR         @R3
    00000328 6493                   MOV         R9,R4
    0000032A 7F10                   ADD         #16,R15
      dl2_main.c   204                                    print_chs_str(x,y,index==i,buf);
    0000032C D223                   MOV.L       L776+28,R2 ; _print_chs_str
    0000032E 6793                   MOV         R9,R7
    00000330 3DE0                   CMP/EQ      R14,R13
    00000332 0629                   MOVT        R6
    00000334 65A3                   MOV         R10,R5
    00000336 420B                   JSR         @R2
    00000338 E400                   MOV         #0,R4
    0000033A 7E01                   ADD         #1,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000033C 63B2                   MOV.L       @R11,R3
    0000033E 5236                   MOV.L       @(24,R3),R2
    00000340 3A2C                   ADD         R2,R10
    00000342              L669:                             
    00000342 E405                   MOV         #5,R4
    00000344 3E43                   CMP/GE      R4,R14
    00000346 8BDF                   BF          L670
      dl2_main.c   205                            }
      dl2_main.c   206                            redraw = TRUE;
    00000348 6EC3                   MOV         R12,R14
    0000034A              L668:                             
      dl2_main.c   207                    }
      dl2_main.c   208                    GetKey(&key);
    0000034A DA21                   MOV.L       L776+48,R10; _GetKey
    0000034C 4A0B                   JSR         @R10
    0000034E 64F3                   MOV         R15,R4
      dl2_main.c   209                    if (key==KEY_CTRL_UP)
    00000350 9427                   MOV.W       L776+2,R4  ; H'7542
    00000352 62F2                   MOV.L       @R15,R2
    00000354 3240                   CMP/EQ      R4,R2
    00000356 8B03                   BF          L671
      dl2_main.c   210                    {
      dl2_main.c   211                            if (index<=0) continue;
    00000358 4D15                   CMP/PL      R13
    0000035A 8BCE                   BF          L667
    0000035C A008                   BRA         L572
      dl2_main.c   212                            --index;
    0000035E 7DFF                   ADD         #-1,R13
    00000360              L671:                             
      dl2_main.c   213                            redraw = TRUE;
      dl2_main.c   214                    }
      dl2_main.c   215                    else if (key==KEY_CTRL_DOWN)
    00000360 9420                   MOV.W       L776+4,R4  ; H'7547
    00000362 62F2                   MOV.L       @R15,R2
    00000364 3240                   CMP/EQ      R4,R2
    00000366 8B05                   BF          L674
      dl2_main.c   216                    {
      dl2_main.c   217                            if (index>=MARK_SIZE-1) continue;
    00000368 E404                   MOV         #4,R4
    0000036A 3D43                   CMP/GE      R4,R13
    0000036C 89C5                   BT          L667
      dl2_main.c   218                            ++index;
    0000036E 7D01                   ADD         #1,R13
    00000370              L572:
      dl2_main.c   219                            redraw = TRUE;
    00000370 AFC3                   BRA         L667
    00000372 6EC3                   MOV         R12,R14
    00000374              L674:                             
      dl2_main.c   220                    }
      dl2_main.c   221                    else if (key==KEY_CTRL_EXE)
    00000374 9417                   MOV.W       L776+6,R4  ; H'7534
    00000376 63F2                   MOV.L       @R15,R3
    00000378 3340                   CMP/EQ      R4,R3
    0000037A 8B01                   BF          L677
      dl2_main.c   222                    {
      dl2_main.c   223                            return index;
    0000037C A005                   BRA         L678




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000037E 60D3                   MOV         R13,R0
    00000380              L677:                             
      dl2_main.c   224                    }
      dl2_main.c   225                    else if (key==KEY_CTRL_EXIT) return -1;
    00000380 9412                   MOV.W       L776+8,R4  ; H'7532
    00000382 62F2                   MOV.L       @R15,R2
    00000384 3240                   CMP/EQ      R4,R2
    00000386 8BB8                   BF          L667
    00000388 E0FF                   MOV         #-1,R0
    0000038A              L678:                             
      dl2_main.c   226            }
      dl2_main.c   227    }
    0000038A 910E                   MOV.W       L776+10,R1 ; H'008C
    0000038C 3F1C                   ADD         R1,R15
    0000038E 4F26                   LDS.L       @R15+,PR
    00000390 68F6                   MOV.L       @R15+,R8
    00000392 69F6                   MOV.L       @R15+,R9
    00000394 6AF6                   MOV.L       @R15+,R10
    00000396 6BF6                   MOV.L       @R15+,R11
    00000398 6CF6                   MOV.L       @R15+,R12
    0000039A 6DF6                   MOV.L       @R15+,R13
    0000039C 000B                   RTS
    0000039E 6EF6                   MOV.L       @R15+,R14
    000003A0              L776:                             
    000003A0 FF74                   .DATA.W     H'FF74
    000003A2 7542                   .DATA.W     H'7542
    000003A4 7547                   .DATA.W     H'7547
    000003A6 7534                   .DATA.W     H'7534
    000003A8 7532                   .DATA.W     H'7532
    000003AA 008C                   .DATA.W     H'008C
    000003AC <00000000>             .DATA.L     _sys_font
    000003B0 <00000000>             .DATA.L     _get_str_width
    000003B4 <00000000>             .DATA.L     _select_font
    000003B8 <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    000003BC <00000000>             .DATA.L     _print_chs_str
    000003C0 <00000000>             .DATA.L     _page_size
    000003C4 <00000000>             .DATA.L     _mark
    000003C8 <00000000>             .DATA.L     L457
    000003CC <00000000>             .DATA.L     _sprintf
    000003D0 <00000000>             .DATA.L     _GetKey
      dl2_main.c   228    
      dl2_main.c   229    void start_read ()
    000003D4              _start_read:                     ; function: start_read
                                                           ; frame size=196
    000003D4 2FE6                   MOV.L       R14,@-R15
      dl2_main.c   230    {
      dl2_main.c   231            uint    key;
      dl2_main.c   232            int             redraw = 1;
    000003D6 E301                   MOV         #1,R3
    000003D8 9049                   MOV.W       L777,R0    ; H'FF6C
    000003DA 2FD6                   MOV.L       R13,@-R15
    000003DC 2FC6                   MOV.L       R12,@-R15
    000003DE 2FB6                   MOV.L       R11,@-R15
    000003E0 2FA6                   MOV.L       R10,@-R15
    000003E2 2F96                   MOV.L       R9,@-R15
    000003E4 2F86                   MOV.L       R8,@-R15
    000003E6 4F22                   STS.L       PR,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003E8 DC22                   MOV.L       L777+6,R12 ; _file_pos
    000003EA 3F0C                   ADD         R0,R15
      dl2_main.c   233            int             menu_index = 0;
      dl2_main.c   234    
      dl2_main.c   235            file_pos = get_page_offset();
    000003EC BF39                   BSR         _get_page_offset
    000003EE 1F34                   MOV.L       R3,@(16,R15)
    000003F0 2C02                   MOV.L       R0,@R12
      dl2_main.c   236            
      dl2_main.c   237            while(1)
    000003F2              L682:                             
      dl2_main.c   238            {
      dl2_main.c   239                    if (redraw)
    000003F2 9A3D                   MOV.W       L777+2,R10 ; H'0080
    000003F4 DD20                   MOV.L       L777+10,R13; _usr_font
    000003F6 52F4                   MOV.L       @(16,R15),R2
    000003F8 2228                   TST         R2,R2
    000003FA 8D67                   BT/S        L683
    000003FC EB00                   MOV         #0,R11
      dl2_main.c   240                    {
      dl2_main.c   241                            uchar c1,c2;
      dl2_main.c   242                            int   x = 0,y = 0,i = 0;
    000003FE 6EB3                   MOV         R11,R14
      dl2_main.c   243                            redraw = 0;
      dl2_main.c   244                            all_clr();
    00000400 D31E                   MOV.L       L777+14,R3 ; _Bdisp_AllClr_VRAM
    00000402 69B3                   MOV         R11,R9
    00000404 68B3                   MOV         R11,R8
    00000406 430B                   JSR         @R3
    00000408 1FB4                   MOV.L       R11,@(16,R15)
      dl2_main.c   245                            select_font(usr_font);
    0000040A D21D                   MOV.L       L777+18,R2 ; _select_font
    0000040C 420B                   JSR         @R2
    0000040E 64D2                   MOV.L       @R13,R4
      dl2_main.c   246    
      dl2_main.c   247                            while(file_pos+i<file_size)
    00000410 A055                   BRA         L684
    00000412 0009                   NOP
    00000414              L685:                             
      dl2_main.c   248                            {
      dl2_main.c   249                                    read_file(fh_txt,&c1,1,file_pos+i);i++;
    00000414 57F3                   MOV.L       @(12,R15),R7
    00000416 E601                   MOV         #1,R6
    00000418 D31A                   MOV.L       L777+22,R3 ; _fh_txt
    0000041A 65F3                   MOV         R15,R5
    0000041C D21A                   MOV.L       L777+26,R2 ; _Bfile_ReadFile
    0000041E 7504                   ADD         #4,R5
    00000420 420B                   JSR         @R2
    00000422 6432                   MOV.L       @R3,R4
    00000424 84F4                   MOV.B       @(4,R15),R0
    00000426 6403                   MOV         R0,R4
    00000428 644C                   EXTU.B      R4,R4
    0000042A 6343                   MOV         R4,R3
    0000042C 23A8                   TST         R10,R3
    0000042E 8D19                   BT/S        L686
    00000430 7801                   ADD         #1,R8
      dl2_main.c   250                                    if (c1 & 0x80)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      dl2_main.c   251                                    {
      dl2_main.c   252                                            read_file(fh_txt,&c2,1,file_pos+i);i++;
    00000432 E601                   MOV         #1,R6
    00000434 D313                   MOV.L       L777+22,R3 ; _fh_txt
    00000436 65F3                   MOV         R15,R5
    00000438 D213                   MOV.L       L777+26,R2 ; _Bfile_ReadFile
    0000043A 7508                   ADD         #8,R5
    0000043C 67C2                   MOV.L       @R12,R7
    0000043E 378C                   ADD         R8,R7
    00000440 420B                   JSR         @R2
    00000442 6432                   MOV.L       @R3,R4
      dl2_main.c   253                                            print_chs_char(x,y,0,c1,c2);
    00000444 84F8                   MOV.B       @(8,R15),R0
    00000446 E600                   MOV         #0,R6
    00000448 7801                   ADD         #1,R8
    0000044A 6303                   MOV         R0,R3
    0000044C 2F36                   MOV.L       R3,@-R15
    0000044E 6593                   MOV         R9,R5
    00000450 84F8                   MOV.B       @(8,R15),R0
    00000452 6703                   MOV         R0,R7
    00000454 D30D                   MOV.L       L777+30,R3 ; _print_chs_char
    00000456 430B                   JSR         @R3
    00000458 64E3                   MOV         R14,R4
    0000045A 7F04                   ADD         #4,R15
      dl2_main.c   254                                            x += usr_font->cwidth;
    0000045C 62D2                   MOV.L       @R13,R2
    0000045E 5324                   MOV.L       @(16,R2),R3
    00000460 A020                   BRA         L687
    00000462 3E3C                   ADD         R3,R14
    00000464              L686:                             
      dl2_main.c   255                                    }
      dl2_main.c   256                                    else if (c1 == '\n')
    00000464 6043                   MOV         R4,R0
    00000466 880A                   CMP/EQ      #10,R0
    00000468 8B12                   BF          L688
      dl2_main.c   257                                    {
      dl2_main.c   258                                            x = SCR_WIDTH;
    0000046A A01B                   BRA         L687
    0000046C 6EA3                   MOV         R10,R14
    0000046E              L777:                             
    0000046E FF6C                   .DATA.W     H'FF6C
    00000470 0080                   .DATA.W     H'0080
    00000472 0000                   .DATA.W     0
    00000474 <00000000>             .DATA.L     _file_pos
    00000478 <00000000>             .DATA.L     _usr_font
    0000047C <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    00000480 <00000000>             .DATA.L     _select_font
    00000484 <00000000>             .DATA.L     _fh_txt
    00000488 <00000000>             .DATA.L     _Bfile_ReadFile
    0000048C <00000000>             .DATA.L     _print_chs_char
    00000490              L688:                             
      dl2_main.c   259                                    }
      dl2_main.c   260                                    else
      dl2_main.c   261                                    {
      dl2_main.c   262                                            print_asc_char(x,y,0,c1);
    00000490 84F4                   MOV.B       @(4,R15),R0
    00000492 E600                   MOV         #0,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000494 D327                   MOV.L       L778+6,R3  ; _print_asc_char
    00000496 6593                   MOV         R9,R5
    00000498 6703                   MOV         R0,R7
    0000049A 430B                   JSR         @R3
    0000049C 64E3                   MOV         R14,R4
      dl2_main.c   263                                            x += usr_font->awidth;
    0000049E 62D2                   MOV.L       @R13,R2
    000004A0 5325                   MOV.L       @(20,R2),R3
    000004A2 3E3C                   ADD         R3,R14
    000004A4              L687:                             
      dl2_main.c   264                                    }
      dl2_main.c   265                                    if (x+usr_font->cwidth > SCR_WIDTH)
    000004A4 62D2                   MOV.L       @R13,R2
    000004A6 5324                   MOV.L       @(16,R2),R3
    000004A8 33EC                   ADD         R14,R3
    000004AA 33A6                   CMP/HI      R10,R3
    000004AC 8B07                   BF          L684
      dl2_main.c   266                                    {
      dl2_main.c   267                                            x = 0;
      dl2_main.c   268                                            y += usr_font->height;
      dl2_main.c   269                                            if (y + usr_font->height > SCR_HEIGHT)
    000004AE E540                   MOV         #64,R5
    000004B0 64D2                   MOV.L       @R13,R4
    000004B2 5446                   MOV.L       @(24,R4),R4
    000004B4 394C                   ADD         R4,R9
    000004B6 349C                   ADD         R9,R4
    000004B8 3456                   CMP/HI      R5,R4
    000004BA 8D07                   BT/S        L683
    000004BC 6EB3                   MOV         R11,R14
    000004BE              L684:                             
    000004BE D41E                   MOV.L       L778+10,R4 ; _file_size
    000004C0 63C2                   MOV.L       @R12,R3
    000004C2 338C                   ADD         R8,R3
    000004C4 1F33                   MOV.L       R3,@(12,R15)
    000004C6 6242                   MOV.L       @R4,R2
    000004C8 3322                   CMP/HS      R2,R3
    000004CA 8BA3                   BF          L685
    000004CC              L683:                             
      dl2_main.c   270                                                    break;
      dl2_main.c   271                                    }
      dl2_main.c   272                            }
      dl2_main.c   273                    }
      dl2_main.c   274                    GetKey(&key);
    000004CC DE1B                   MOV.L       L778+14,R14; _GetKey
    000004CE 4E0B                   JSR         @R14
    000004D0 64F3                   MOV         R15,R4
      dl2_main.c   275                    if (key==KEY_CTRL_UP)
    000004D2 952C                   MOV.W       L778,R5    ; H'7542
    000004D4 D41A                   MOV.L       L778+18,R4 ; _page_offset
    000004D6 DE1B                   MOV.L       L778+22,R14; _page_now
    000004D8 63F2                   MOV.L       @R15,R3
    000004DA 3350                   CMP/EQ      R5,R3
    000004DC 8B0F                   BF          L693
      dl2_main.c   276                    {
      dl2_main.c   277                            if (page_now<=0) continue;
    000004DE E100                   MOV         #0,R1
    000004E0 62E2                   MOV.L       @R14,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004E2 3216                   CMP/HI      R1,R2
    000004E4 8B85                   BF          L682
      dl2_main.c   278                            file_pos -= page_offset[--page_now];
    000004E6 63E2                   MOV.L       @R14,R3
    000004E8 73FF                   ADD         #-1,R3
    000004EA 2E32                   MOV.L       R3,@R14
    000004EC 6042                   MOV.L       @R4,R0
    000004EE 4300                   SHLL        R3
    000004F0 023D                   MOV.W       @(R0,R3),R2
    000004F2 622D                   EXTU.W      R2,R2
    000004F4 63C2                   MOV.L       @R12,R3
    000004F6 3328                   SUB         R2,R3
    000004F8 2C32                   MOV.L       R3,@R12
      dl2_main.c   279                            redraw = 1;
    000004FA E201                   MOV         #1,R2
    000004FC 1F24                   MOV.L       R2,@(16,R15)
    000004FE              L693:                             
      dl2_main.c   280                    }
      dl2_main.c   281                    if (key==KEY_CTRL_DOWN)
    000004FE 9517                   MOV.W       L778+2,R5  ; H'7547
    00000500 63F2                   MOV.L       @R15,R3
    00000502 3350                   CMP/EQ      R5,R3
    00000504 8B22                   BF          L695
      dl2_main.c   282                    {
      dl2_main.c   283                            if (page_now+1>=page_size) continue;
    00000506 61E2                   MOV.L       @R14,R1
    00000508 D20F                   MOV.L       L778+26,R2 ; _page_size
    0000050A 7101                   ADD         #1,R1
    0000050C 6322                   MOV.L       @R2,R3
    0000050E 3132                   CMP/HS      R3,R1
    00000510 8B01                   BF          L779
    00000512 AF6E                   BRA         L682
    00000514 0009                   NOP
    00000516              L779:                             
      dl2_main.c   284                            file_pos += page_offset[page_now++];
    00000516 61E2                   MOV.L       @R14,R1
    00000518 7101                   ADD         #1,R1
    0000051A 2E12                   MOV.L       R1,@R14
    0000051C 6042                   MOV.L       @R4,R0
    0000051E 71FF                   ADD         #-1,R1
    00000520 62C2                   MOV.L       @R12,R2
    00000522 4100                   SHLL        R1
    00000524 031D                   MOV.W       @(R0,R1),R3
    00000526 633D                   EXTU.W      R3,R3
    00000528 323C                   ADD         R3,R2
    0000052A A0E3                   BRA         L574
    0000052C 2C22                   MOV.L       R2,@R12
    0000052E              L778:                             
    0000052E 7542                   .DATA.W     H'7542
    00000530 7547                   .DATA.W     H'7547
    00000532 0000                   .DATA.W     0
    00000534 <00000000>             .DATA.L     _print_asc_char
    00000538 <00000000>             .DATA.L     _file_size
    0000053C <00000000>             .DATA.L     _GetKey
    00000540 <00000000>             .DATA.L     _page_offset
    00000544 <00000000>             .DATA.L     _page_now
    00000548 <00000000>             .DATA.L     _page_size




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000054C              L695:                             
      dl2_main.c   285                            redraw = 1;
      dl2_main.c   286                    }
      dl2_main.c   287                    else if (key==KEY_CTRL_EXIT)
    0000054C 9463                   MOV.W       L780,R4    ; H'7532
    0000054E 63F2                   MOV.L       @R15,R3
    00000550 3340                   CMP/EQ      R4,R3
    00000552 8901                   BT          L781
    00000554 AF4D                   BRA         L682
    00000556 0009                   NOP
    00000558              L781:                             
      dl2_main.c   288                    {
      dl2_main.c   289                            char    buf[128];
      dl2_main.c   290                            int             r;
      dl2_main.c   291                            select_font (sys_font);
    00000558 D92F                   MOV.L       L780+2,R9  ; _sys_font
    0000055A D330                   MOV.L       L780+6,R3  ; _select_font
    0000055C 430B                   JSR         @R3
    0000055E 6492                   MOV.L       @R9,R4
      dl2_main.c   292                            sprintf(buf,"  当前页%04d/%04d",page_now+1,page_size);
    00000560 D82F                   MOV.L       L780+10,R8 ; L483
    00000562 69F3                   MOV         R15,R9
    00000564 D32F                   MOV.L       L780+14,R3 ; _page_size
    00000566 7914                   ADD         #20,R9
    00000568 6232                   MOV.L       @R3,R2
    0000056A 2F26                   MOV.L       R2,@-R15
    0000056C 61E2                   MOV.L       @R14,R1
    0000056E 7101                   ADD         #1,R1
    00000570 2F16                   MOV.L       R1,@-R15
    00000572 2F86                   MOV.L       R8,@-R15
    00000574 D22C                   MOV.L       L780+18,R2 ; _sprintf
    00000576 420B                   JSR         @R2
    00000578 6493                   MOV         R9,R4
      dl2_main.c   293                            all_clr();
    0000057A D32C                   MOV.L       L780+22,R3 ; _Bdisp_AllClr_VRAM
    0000057C 430B                   JSR         @R3
    0000057E 0009                   NOP
      dl2_main.c   294                            print_chs_str(0,0,0,buf);
    00000580 D82B                   MOV.L       L780+26,R8 ; _print_chs_str
    00000582 6793                   MOV         R9,R7
    00000584 E600                   MOV         #0,R6
    00000586 6563                   MOV         R6,R5
    00000588 480B                   JSR         @R8
    0000058A 6463                   MOV         R6,R4
      dl2_main.c   295                            menu_index = show_menu (0,5,READ_MENU_TEXT,32,16);
    0000058C D829                   MOV.L       L780+30,R8 ; _READ_MENU_TEXT
    0000058E E210                   MOV         #16,R2
    00000590 2F26                   MOV.L       R2,@-R15
    00000592 E720                   MOV         #32,R7
    00000594 6683                   MOV         R8,R6
    00000596 E505                   MOV         #5,R5
    00000598 B12A                   BSR         _show_menu
    0000059A E400                   MOV         #0,R4
    0000059C 7F10                   ADD         #16,R15
      dl2_main.c   296                            if (menu_index==-1) continue;
    0000059E 88FF                   CMP/EQ      #-1,R0
    000005A0 8F02                   BF/S        L782




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005A2 6403                   MOV         R0,R4
    000005A4 AF25                   BRA         L682
    000005A6 0009                   NOP
    000005A8              L782:                             
      dl2_main.c   297                            else if (menu_index == 0)
    000005A8 D823                   MOV.L       L780+34,R8 ; _show_dialog
    000005AA 2448                   TST         R4,R4
    000005AC 8B58                   BF          L701
      dl2_main.c   298                            {
      dl2_main.c   299                                    close_font(usr_font);
    000005AE DE23                   MOV.L       L780+38,R14; _close_font
    000005B0 4E0B                   JSR         @R14
    000005B2 64D2                   MOV.L       @R13,R4
    000005B4 DA22                   MOV.L       L780+42,R10; _open_font
    000005B6 DB23                   MOV.L       L780+46,R11; L488
    000005B8 DE23                   MOV.L       L780+50,R14; _font_modle
    000005BA 60E2                   MOV.L       @R14,R0
    000005BC 8810                   CMP/EQ      #16,R0
    000005BE 8F0C                   BF/S        L702
    000005C0 6403                   MOV         R0,R4
      dl2_main.c   300                                    if (font_modle == 16)
      dl2_main.c   301                                    {
      dl2_main.c   302                                            usr_font = open_font("\\\\fls0\\FONT8.dlf");
    000005C2 D922                   MOV.L       L780+54,R9 ; L487
    000005C4 4A0B                   JSR         @R10
    000005C6 6493                   MOV         R9,R4
    000005C8 2D02                   MOV.L       R0,@R13
      dl2_main.c   303                                            show_dialog(" 字体 ", "已更换为小字体.", 0, DLG_BTN_OK);
    000005CA E702                   MOV         #2,R7
    000005CC DD20                   MOV.L       L780+58,R13; L489
    000005CE E600                   MOV         #0,R6
    000005D0 65D3                   MOV         R13,R5
    000005D2 480B                   JSR         @R8
    000005D4 64B3                   MOV         R11,R4
      dl2_main.c   304                                            font_modle = 8;
    000005D6 A00E                   BRA         L771
    000005D8 E408                   MOV         #8,R4
    000005DA              L702:                             
      dl2_main.c   305                                    }
      dl2_main.c   306                                    else if (font_modle == 8)
    000005DA 6043                   MOV         R4,R0
    000005DC D91D                   MOV.L       L780+62,R9 ; L491
    000005DE 8808                   CMP/EQ      #8,R0
    000005E0 8B0B                   BF          L704
      dl2_main.c   307                                    {
      dl2_main.c   308            
      dl2_main.c   309                                            usr_font = open_font("\\\\fls0\\FONT12.dlf");
    000005E2 4A0B                   JSR         @R10
    000005E4 6493                   MOV         R9,R4
      dl2_main.c   310                                            show_dialog(" 字体 ", "已更换为中字体.", 0, DLG_BTN_OK);
    000005E6 E702                   MOV         #2,R7
    000005E8 2D02                   MOV.L       R0,@R13
    000005EA E600                   MOV         #0,R6
    000005EC DD1A                   MOV.L       L780+66,R13; L492
    000005EE 65D3                   MOV         R13,R5
    000005F0 480B                   JSR         @R8
    000005F2 64B3                   MOV         R11,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      dl2_main.c   311                                            font_modle = 12;
    000005F4 E40C                   MOV         #12,R4
    000005F6              L771:                             
    000005F6 A07D                   BRA         L574
    000005F8 2E42                   MOV.L       R4,@R14
    000005FA              L704:                             
      dl2_main.c   312                                    }
      dl2_main.c   313                                    else if (font_modle == 12)
    000005FA 880C                   CMP/EQ      #12,R0
    000005FC 8B7A                   BF          L574
      dl2_main.c   314                                    {
      dl2_main.c   315            
      dl2_main.c   316                                            usr_font = open_font("\\\\fls0\\FONT12.dlf");
    000005FE 4A0B                   JSR         @R10
    00000600 6493                   MOV         R9,R4
      dl2_main.c   317                                            show_dialog(" 字体 ", "已更换为大字体.", 0, DLG_BTN_OK);
    00000602 E702                   MOV         #2,R7
    00000604 2D02                   MOV.L       R0,@R13
    00000606 E600                   MOV         #0,R6
    00000608 DD14                   MOV.L       L780+70,R13; L494
    0000060A 65D3                   MOV         R13,R5
    0000060C 480B                   JSR         @R8
    0000060E 64B3                   MOV         R11,R4
      dl2_main.c   318                                            font_modle = 16;
    00000610 E410                   MOV         #16,R4
    00000612 A06F                   BRA         L574
    00000614 2E42                   MOV.L       R4,@R14
    00000616              L780:                             
    00000616 7532                   .DATA.W     H'7532
    00000618 <00000000>             .DATA.L     _sys_font
    0000061C <00000000>             .DATA.L     _select_font
    00000620 <00000000>             .DATA.L     L483
    00000624 <00000000>             .DATA.L     _page_size
    00000628 <00000000>             .DATA.L     _sprintf
    0000062C <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    00000630 <00000000>             .DATA.L     _print_chs_str
    00000634 <00000000>             .DATA.L     _READ_MENU_TEXT
    00000638 <00000000>             .DATA.L     _show_dialog
    0000063C <00000000>             .DATA.L     _close_font
    00000640 <00000000>             .DATA.L     _open_font
    00000644 <00000000>             .DATA.L     L488
    00000648 <00000000>             .DATA.L     _font_modle
    0000064C <00000000>             .DATA.L     L487
    00000650 <00000000>             .DATA.L     L489
    00000654 <00000000>             .DATA.L     L491
    00000658 <00000000>             .DATA.L     L492
    0000065C <00000000>             .DATA.L     L494
    00000660              L701:                             
      dl2_main.c   319                                    }
      dl2_main.c   320    
      dl2_main.c   321    
      dl2_main.c   322    
      dl2_main.c   323                            }
      dl2_main.c   324                            else if (menu_index==1)
    00000660 6043                   MOV         R4,R0
    00000662 8801                   CMP/EQ      #1,R0
    00000664 8B24                   BF          L708




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      dl2_main.c   325                            {
      dl2_main.c   326                                    show_dialog (""," 输入页码 ",0,0);
    00000666 E700                   MOV         #0,R7
    00000668 D435                   MOV.L       L783+8,R4  ; L496
    0000066A D534                   MOV.L       L783+4,R5  ; L497
    0000066C 480B                   JSR         @R8
    0000066E 6673                   MOV         R7,R6
      dl2_main.c   327                                    sprintf(buf,"%d",page_now+1);
    00000670 DD34                   MOV.L       L783+12,R13; L498
    00000672 63E2                   MOV.L       @R14,R3
    00000674 D234                   MOV.L       L783+16,R2 ; _sprintf
    00000676 7301                   ADD         #1,R3
    00000678 2F36                   MOV.L       R3,@-R15
    0000067A 2FD6                   MOV.L       R13,@-R15
    0000067C 420B                   JSR         @R2
    0000067E 6493                   MOV         R9,R4
      dl2_main.c   328                                    if (get_line_box(buf,128,16,14,32))
    00000680 DD32                   MOV.L       L783+20,R13; _get_line_box
    00000682 E320                   MOV         #32,R3
    00000684 2F36                   MOV.L       R3,@-R15
    00000686 E70E                   MOV         #14,R7
    00000688 E610                   MOV         #16,R6
    0000068A 65A3                   MOV         R10,R5
    0000068C 4D0B                   JSR         @R13
    0000068E 6493                   MOV         R9,R4
    00000690 2008                   TST         R0,R0
    00000692 8D2F                   BT/S        L574
    00000694 7F0C                   ADD         #12,R15
      dl2_main.c   329                                    {
      dl2_main.c   330                                            page_now = atol(buf)-1;
    00000696 DD2E                   MOV.L       L783+24,R13; _atol
    00000698 4D0B                   JSR         @R13
    0000069A 6493                   MOV         R9,R4
    0000069C D22D                   MOV.L       L783+28,R2 ; _page_size
    0000069E 70FF                   ADD         #-1,R0
    000006A0 2E02                   MOV.L       R0,@R14
    000006A2 6303                   MOV         R0,R3
    000006A4 6422                   MOV.L       @R2,R4
    000006A6 3342                   CMP/HS      R4,R3
    000006A8 8B10                   BF          L573
      dl2_main.c   331                                            if (page_now<0) page_now=0;
      dl2_main.c   332                                            else if (page_now>=page_size)page_now = page_size-1;
    000006AA 74FF                   ADD         #-1,R4
    000006AC A00E                   BRA         L573
    000006AE 2E42                   MOV.L       R4,@R14
    000006B0              L708:                             
      dl2_main.c   333                                            file_pos = get_page_offset();
      dl2_main.c   334                                    }
      dl2_main.c   335                            }
      dl2_main.c   336                            else if (menu_index==2)
    000006B0 DD29                   MOV.L       L783+32,R13; _mark
    000006B2 6043                   MOV         R4,R0
    000006B4 8802                   CMP/EQ      #2,R0
    000006B6 8B0D                   BF          L714
      dl2_main.c   337                            {
      dl2_main.c   338                                    r = select_page_mark ("读取书签");
    000006B8 DB28                   MOV.L       L783+36,R11; L502




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006BA BDF9                   BSR         _select_page_mark
    000006BC 64B3                   MOV         R11,R4
      dl2_main.c   339                                    if (r!=-1)
    000006BE 88FF                   CMP/EQ      #-1,R0
    000006C0 8D18                   BT/S        L574
    000006C2 6403                   MOV         R0,R4
      dl2_main.c   340                                    {
      dl2_main.c   341                                            page_now = mark[r];
    000006C4 6043                   MOV         R4,R0
    000006C6 4008                   SHLL2       R0
    000006C8 03DE                   MOV.L       @(R0,R13),R3
    000006CA 2E32                   MOV.L       R3,@R14
    000006CC              L573:
      dl2_main.c   342                                            file_pos = get_page_offset();
    000006CC BDC9                   BSR         _get_page_offset
    000006CE 0009                   NOP
    000006D0 A010                   BRA         L574
    000006D2 2C02                   MOV.L       R0,@R12
    000006D4              L714:                             
      dl2_main.c   343                                    }
      dl2_main.c   344                            }
      dl2_main.c   345                            else if (menu_index==3)
    000006D4 8803                   CMP/EQ      #3,R0
    000006D6 8B0A                   BF          L717
      dl2_main.c   346                            {
      dl2_main.c   347                                    r = select_page_mark ("保存书签");
    000006D8 DB21                   MOV.L       L783+40,R11; L505
    000006DA BDE9                   BSR         _select_page_mark
    000006DC 64B3                   MOV         R11,R4
      dl2_main.c   348                                    if (r!=-1)
    000006DE 88FF                   CMP/EQ      #-1,R0
    000006E0 8D08                   BT/S        L574
    000006E2 6403                   MOV         R0,R4
      dl2_main.c   349                                    {
      dl2_main.c   350                                            mark[r] = page_now;
    000006E4 63E2                   MOV.L       @R14,R3
    000006E6 6043                   MOV         R4,R0
    000006E8 4008                   SHLL2       R0
    000006EA A003                   BRA         L574
    000006EC 0D36                   MOV.L       R3,@(R0,R13)
    000006EE              L717:                             
      dl2_main.c   351                                    }
      dl2_main.c   352                            }
      dl2_main.c   353                            else if (menu_index==4)
    000006EE 6043                   MOV         R4,R0
    000006F0 8804                   CMP/EQ      #4,R0
    000006F2 8902                   BT          L721
    000006F4              L574:
      dl2_main.c   354                            {
      dl2_main.c   355                                    break;
      dl2_main.c   356                            }
      dl2_main.c   357                            redraw = TRUE;
    000006F4 E301                   MOV         #1,R3
    000006F6 AE7C                   BRA         L682
    000006F8 1F34                   MOV.L       R3,@(16,R15)
    000006FA              L721:                             
      dl2_main.c   358                    }//




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      dl2_main.c   359            }
      dl2_main.c   360    }
    000006FA 911D                   MOV.W       L783,R1    ; H'0094
    000006FC 3F1C                   ADD         R1,R15
    000006FE 4F26                   LDS.L       @R15+,PR
    00000700 68F6                   MOV.L       @R15+,R8
    00000702 69F6                   MOV.L       @R15+,R9
    00000704 6AF6                   MOV.L       @R15+,R10
    00000706 6BF6                   MOV.L       @R15+,R11
    00000708 6CF6                   MOV.L       @R15+,R12
    0000070A 6DF6                   MOV.L       @R15+,R13
    0000070C 000B                   RTS
    0000070E 6EF6                   MOV.L       @R15+,R14
      dl2_main.c   361    
      dl2_main.c   362    void start_read_text (const char * t_file_name)
    00000710              _start_read_text:                ; function: start_read_text
                                                           ; frame size=16
    00000710 2FE6                   MOV.L       R14,@-R15
    00000712 2FD6                   MOV.L       R13,@-R15
    00000714 2FC6                   MOV.L       R12,@-R15
    00000716 4F22                   STS.L       PR,@-R15
      dl2_main.c   363    {
      dl2_main.c   364            file_name = t_file_name;
    00000718 D212                   MOV.L       L783+44,R2 ; _file_name
      dl2_main.c   365    
      dl2_main.c   366            fh_txt = open_file(file_name,_OPENMODE_READ_SHARE);
    0000071A DC13                   MOV.L       L783+48,R12; _fh_txt
    0000071C 950D                   MOV.W       L783+2,R5  ; H'0080
    0000071E D313                   MOV.L       L783+52,R3 ; _open_file
    00000720 430B                   JSR         @R3
    00000722 2242                   MOV.L       R4,@R2
      dl2_main.c   367    
      dl2_main.c   368            if (fh_txt<0)
    00000724 DD12                   MOV.L       L783+56,R13; L512
    00000726 6203                   MOV         R0,R2
    00000728 DE12                   MOV.L       L783+60,R14; _show_dialog
    0000072A 4211                   CMP/PZ      R2
    0000072C 8D26                   BT/S        L722
    0000072E 2C02                   MOV.L       R0,@R12
      dl2_main.c   369            {
      dl2_main.c   370                    show_dialog(" 错误 "," 找不到文件 ",DLG_ICON_WARN,DLG_BTN_OK);
    00000730 D511                   MOV.L       L783+64,R5 ; L513
    00000732 E702                   MOV         #2,R7
      dl2_main.c   371                    return;
    00000734 A039                   BRA         L773
    00000736 E603                   MOV         #3,R6
    00000738              L783:                             
    00000738 0094                   .DATA.W     H'0094
    0000073A 0080                   .DATA.W     H'0080
    0000073C <00000000>             .DATA.L     L497
    00000740 <00000000>             .DATA.L     L496
    00000744 <00000000>             .DATA.L     L498
    00000748 <00000000>             .DATA.L     _sprintf
    0000074C <00000000>             .DATA.L     _get_line_box
    00000750 <00000000>             .DATA.L     _atol
    00000754 <00000000>             .DATA.L     _page_size
    00000758 <00000000>             .DATA.L     _mark




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000075C <00000000>             .DATA.L     L502
    00000760 <00000000>             .DATA.L     L505
    00000764 <00000000>             .DATA.L     _file_name
    00000768 <00000000>             .DATA.L     _fh_txt
    0000076C <00000000>             .DATA.L     _open_file
    00000770 <00000000>             .DATA.L     L512
    00000774 <00000000>             .DATA.L     _show_dialog
    00000778 <00000000>             .DATA.L     L513
    0000077C              L722:                             
      dl2_main.c   372            }
      dl2_main.c   373    
      dl2_main.c   374            show_dialog(" 分页中 "," 请稍等 ",DLG_ICON_WAIT,0);putdisp();
    0000077C D516                   MOV.L       L784+2,R5  ; L515
    0000077E E700                   MOV         #0,R7
    00000780 D416                   MOV.L       L784+6,R4  ; L514
    00000782 4E0B                   JSR         @R14
    00000784 E602                   MOV         #2,R6
    00000786 D216                   MOV.L       L784+10,R2 ; _Bdisp_PutDisp_DD
    00000788 420B                   JSR         @R2
    0000078A 0009                   NOP
      dl2_main.c   375            switch(split_page ())
    0000078C BCA3                   BSR         _split_page
    0000078E 0009                   NOP
    00000790 88FF                   CMP/EQ      #-1,R0
    00000792 8903                   BT          L612
    00000794 88FE                   CMP/EQ      #-2,R0
    00000796 8905                   BT          L614
    00000798 A00B                   BRA         L616
    0000079A 0009                   NOP
    0000079C              L612:                            ; case label 
      dl2_main.c   376            {
      dl2_main.c   377                    case -1:show_dialog(" 错误 "," 页数过多 ",DLG_ICON_WARN,DLG_BTN_OK);return;
    0000079C D511                   MOV.L       L784+14,R5 ; L517
    0000079E E702                   MOV         #2,R7
    000007A0 A003                   BRA         L773
    000007A2 E603                   MOV         #3,R6
    000007A4              L614:                            ; case label 
      dl2_main.c   378                    case -2:show_dialog(" 错误 "," 内存不足 ",DLG_ICON_WARN,DLG_BTN_OK);return;
    000007A4 D510                   MOV.L       L784+18,R5 ; L518
    000007A6 E702                   MOV         #2,R7
    000007A8 E603                   MOV         #3,R6
    000007AA              L773:                             
    000007AA 4E0B                   JSR         @R14
    000007AC 64D3                   MOV         R13,R4
    000007AE A00D                   BRA         L723
    000007B0 0009                   NOP
    000007B2              L616:                            ; default label 
      dl2_main.c   379                    default:;
      dl2_main.c   380            }
      dl2_main.c   381            read_page_mark();
    000007B2 BC4C                   BSR         _read_page_mark
    000007B4 0009                   NOP
      dl2_main.c   382            start_read();
    000007B6 BE0D                   BSR         _start_read
    000007B8 0009                   NOP
      dl2_main.c   383            save_page_mark();
    000007BA BC21                   BSR         _save_page_mark




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007BC 0009                   NOP
      dl2_main.c   384            close_file(fh_txt);
    000007BE 64C2                   MOV.L       @R12,R4
    000007C0 4F26                   LDS.L       @R15+,PR
    000007C2 6CF6                   MOV.L       @R15+,R12
    000007C4 D309                   MOV.L       L784+22,R3 ; _Bfile_CloseFile
    000007C6 6DF6                   MOV.L       @R15+,R13
    000007C8 432B                   JMP         @R3
    000007CA 6EF6                   MOV.L       @R15+,R14
    000007CC              L723:                             
      dl2_main.c   385    }
    000007CC 4F26                   LDS.L       @R15+,PR
    000007CE 6CF6                   MOV.L       @R15+,R12
    000007D0 6DF6                   MOV.L       @R15+,R13
    000007D2 000B                   RTS
    000007D4 6EF6                   MOV.L       @R15+,R14
    000007D6              L784:                             
    000007D6 0000                   .DATA.W     0
    000007D8 <00000000>             .DATA.L     L515
    000007DC <00000000>             .DATA.L     L514
    000007E0 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000007E4 <00000000>             .DATA.L     L517
    000007E8 <00000000>             .DATA.L     L518
    000007EC <00000000>             .DATA.L     _Bfile_CloseFile
      dl2_main.c   386    
      dl2_main.c   387    int show_menu (int def_index,int count,const char * item[],int x,int y)
    000007F0              _show_menu:                      ; function: show_menu
                                                           ; frame size=68
    000007F0 2FE6                   MOV.L       R14,@-R15
      dl2_main.c   388    {
      dl2_main.c   389            int             width = 0,height,i,t,index = def_index;
    000007F2 6E43                   MOV         R4,R14
      dl2_main.c   390            BOOL    redraw = TRUE;
      dl2_main.c   391            unsigned int key;
      dl2_main.c   392            
      dl2_main.c   393            select_font(sys_font);
    000007F4 D346                   MOV.L       L785+6,R3  ; _sys_font
    000007F6 2FD6                   MOV.L       R13,@-R15
    000007F8 2FC6                   MOV.L       R12,@-R15
    000007FA ED00                   MOV         #0,R13
    000007FC D245                   MOV.L       L785+10,R2 ; _select_font
    000007FE EC01                   MOV         #1,R12
    00000800 2FB6                   MOV.L       R11,@-R15
    00000802 2FA6                   MOV.L       R10,@-R15
    00000804 2F96                   MOV.L       R9,@-R15
    00000806 6A53                   MOV         R5,R10
    00000808 2F86                   MOV.L       R8,@-R15
    0000080A 68D3                   MOV         R13,R8
    0000080C 4F22                   STS.L       PR,@-R15
    0000080E 4F12                   STS.L       MACL,@-R15
    00000810 7FE4                   ADD         #-28,R15
    00000812 1F64                   MOV.L       R6,@(16,R15)
    00000814 1F71                   MOV.L       R7,@(4,R15)
    00000816 420B                   JSR         @R2
    00000818 6432                   MOV.L       @R3,R4
      dl2_main.c   394            
      dl2_main.c   395            for (i=0;i<count;++i)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000081A 6983                   MOV         R8,R9
    0000081C 4A15                   CMP/PL      R10
    0000081E 8F0B                   BF/S        L725
    00000820 5BF4                   MOV.L       @(16,R15),R11
    00000822              L726:                             
      dl2_main.c   396            {
      dl2_main.c   397                    t = get_str_width(item[i]);
    00000822 D23D                   MOV.L       L785+14,R2 ; _get_str_width
    00000824 420B                   JSR         @R2
    00000826 64B2                   MOV.L       @R11,R4
    00000828 6403                   MOV         R0,R4
      dl2_main.c   398                    if (t>width) width = t;
    0000082A 3487                   CMP/GT      R8,R4
    0000082C 8F01                   BF/S        L727
    0000082E 7901                   ADD         #1,R9
    00000830 6843                   MOV         R4,R8
    00000832              L727:                             
    00000832 39A3                   CMP/GE      R10,R9
    00000834 8FF5                   BF/S        L726
    00000836 7B04                   ADD         #4,R11
    00000838              L725:                             
      dl2_main.c   399            }
      dl2_main.c   400            width;
      dl2_main.c   401            height = count * sys_font->height ;
    00000838 D235                   MOV.L       L785+6,R2  ; _sys_font
      dl2_main.c   402            area_clear(x,y,x+width+1,y+height+1,2);
    0000083A E044                   MOV         #68,R0
    0000083C 6322                   MOV.L       @R2,R3
    0000083E 5136                   MOV.L       @(24,R3),R1
    00000840 D236                   MOV.L       L785+18,R2 ; _area_clear
    00000842 E302                   MOV         #2,R3
    00000844 0A17                   MUL.L       R1,R10
    00000846 011A                   STS         MACL,R1
    00000848 1F12                   MOV.L       R1,@(8,R15)
    0000084A 2F36                   MOV.L       R3,@-R15
    0000084C 07FE                   MOV.L       @(R0,R15),R7
    0000084E E044                   MOV         #68,R0
    00000850 371C                   ADD         R1,R7
    00000852 7701                   ADD         #1,R7
    00000854 1F74                   MOV.L       R7,@(16,R15)
    00000856 5BF2                   MOV.L       @(8,R15),R11
    00000858 05FE                   MOV.L       @(R0,R15),R5
    0000085A 66B3                   MOV         R11,R6
    0000085C 368C                   ADD         R8,R6
    0000085E 7601                   ADD         #1,R6
    00000860 420B                   JSR         @R2
    00000862 64B3                   MOV         R11,R4
    00000864 7F04                   ADD         #4,R15
    00000866 69B3                   MOV         R11,R9
    00000868 7901                   ADD         #1,R9
    0000086A E040                   MOV         #64,R0
    0000086C 03FE                   MOV.L       @(R0,R15),R3
    0000086E 62A3                   MOV         R10,R2
    00000870 7301                   ADD         #1,R3
    00000872 72FF                   ADD         #-1,R2
    00000874 1F35                   MOV.L       R3,@(20,R15)
    00000876 1F26                   MOV.L       R2,@(24,R15)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      dl2_main.c   403            while(1)
    00000878              L729:                             
      dl2_main.c   404            {
      dl2_main.c   405                    if (redraw)
    00000878 2CC8                   TST         R12,R12
    0000087A 8930                   BT          L730
      dl2_main.c   406                    {
      dl2_main.c   407                            int cx = x+1,cy = y+1;
    0000087C 5BF5                   MOV.L       @(20,R15),R11
      dl2_main.c   408                            area_clear(x,y,x+width+1,y+height+1,2);
    0000087E E302                   MOV         #2,R3
    00000880 D226                   MOV.L       L785+18,R2 ; _area_clear
    00000882 E044                   MOV         #68,R0
    00000884 2F36                   MOV.L       R3,@-R15
    00000886 57F4                   MOV.L       @(16,R15),R7
    00000888 56F2                   MOV.L       @(8,R15),R6
    0000088A 368C                   ADD         R8,R6
    0000088C 05FE                   MOV.L       @(R0,R15),R5
    0000088E 7601                   ADD         #1,R6
    00000890 420B                   JSR         @R2
    00000892 54F2                   MOV.L       @(8,R15),R4
    00000894 7F04                   ADD         #4,R15
      dl2_main.c   409                            for (i=0;i<count;++i)
    00000896 6CD3                   MOV         R13,R12
    00000898 6383                   MOV         R8,R3
    0000089A 339C                   ADD         R9,R3
    0000089C 73FF                   ADD         #-1,R3
    0000089E 4A15                   CMP/PL      R10
    000008A0 8F1C                   BF/S        L731
    000008A2 1F32                   MOV.L       R3,@(8,R15)
    000008A4              L732:                             
      dl2_main.c   410                            {
      dl2_main.c   411                                    print_chs_str(cx,cy,FALSE,item[i]);
    000008A4 50F4                   MOV.L       @(16,R15),R0
    000008A6 E600                   MOV         #0,R6
    000008A8 D31D                   MOV.L       L785+22,R3 ; _print_chs_str
    000008AA 67C3                   MOV         R12,R7
    000008AC 4708                   SHLL2       R7
    000008AE 65B3                   MOV         R11,R5
    000008B0 077E                   MOV.L       @(R0,R7),R7
    000008B2 430B                   JSR         @R3
    000008B4 6493                   MOV         R9,R4
      dl2_main.c   412                                    if (index==i) area_rev(cx,cy,cx+width-1,cy+sys_font->height-1);
    000008B6 3EC0                   CMP/EQ      R12,R14
    000008B8 8B09                   BF          L733
    000008BA 65B3                   MOV         R11,R5
    000008BC D219                   MOV.L       L785+26,R2 ; _Bdisp_AreaReverseVRAM
    000008BE D314                   MOV.L       L785+6,R3  ; _sys_font
    000008C0 56F2                   MOV.L       @(8,R15),R6
    000008C2 6732                   MOV.L       @R3,R7
    000008C4 5776                   MOV.L       @(24,R7),R7
    000008C6 37BC                   ADD         R11,R7
    000008C8 77FF                   ADD         #-1,R7
    000008CA 420B                   JSR         @R2
    000008CC 6493                   MOV         R9,R4
    000008CE              L733:                             
    000008CE 7C01                   ADD         #1,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      dl2_main.c   413                                    cy += sys_font->height;
    000008D0 D20F                   MOV.L       L785+6,R2  ; _sys_font
    000008D2 3CA3                   CMP/GE      R10,R12
    000008D4 6322                   MOV.L       @R2,R3
    000008D6 5136                   MOV.L       @(24,R3),R1
    000008D8 8FE4                   BF/S        L732
    000008DA 3B1C                   ADD         R1,R11
    000008DC              L731:                             
      dl2_main.c   414                            }
      dl2_main.c   415                            redraw = FALSE;
    000008DC 6CD3                   MOV         R13,R12
    000008DE              L730:                             
      dl2_main.c   416                    }
      dl2_main.c   417                    GetKey(&key);
    000008DE DB12                   MOV.L       L785+30,R11; _GetKey
    000008E0 4B0B                   JSR         @R11
    000008E2 64F3                   MOV         R15,R4
      dl2_main.c   418                    if (key==KEY_CTRL_UP)
    000008E4 9411                   MOV.W       L785,R4    ; H'7542
    000008E6 62F2                   MOV.L       @R15,R2
    000008E8 3240                   CMP/EQ      R4,R2
    000008EA 8B04                   BF          L734
      dl2_main.c   419                    {
      dl2_main.c   420                            index--;if (index<0)index = count-1;
    000008EC 7EFF                   ADD         #-1,R14
    000008EE 4E11                   CMP/PZ      R14
    000008F0 8909                   BT          L576
    000008F2 A008                   BRA         L576
    000008F4 5EF6                   MOV.L       @(24,R15),R14
    000008F6              L734:                             
      dl2_main.c   421                            redraw = TRUE;
      dl2_main.c   422                    }
      dl2_main.c   423                    else if (key==KEY_CTRL_DOWN)
    000008F6 9409                   MOV.W       L785+2,R4  ; H'7547
    000008F8 63F2                   MOV.L       @R15,R3
    000008FA 3340                   CMP/EQ      R4,R3
    000008FC 8B16                   BF          L737
      dl2_main.c   424                    {
      dl2_main.c   425                            index++;if (index>=count)index = 0;
    000008FE 7E01                   ADD         #1,R14
    00000900 3EA3                   CMP/GE      R10,R14
    00000902 8B00                   BF          L576
    00000904 6ED3                   MOV         R13,R14
    00000906              L576:
      dl2_main.c   426                            redraw = TRUE;
    00000906 AFB7                   BRA         L729
    00000908 EC01                   MOV         #1,R12
    0000090A              L785:                             
    0000090A 7542                   .DATA.W     H'7542
    0000090C 7547                   .DATA.W     H'7547
    0000090E 0000                   .DATA.W     0
    00000910 <00000000>             .DATA.L     _sys_font
    00000914 <00000000>             .DATA.L     _select_font
    00000918 <00000000>             .DATA.L     _get_str_width
    0000091C <00000000>             .DATA.L     _area_clear
    00000920 <00000000>             .DATA.L     _print_chs_str
    00000924 <00000000>             .DATA.L     _Bdisp_AreaReverseVRAM




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000928 <00000000>             .DATA.L     _GetKey
    0000092C              L737:                             
      dl2_main.c   427                    }
      dl2_main.c   428                    else if (key==KEY_CTRL_EXE)
    0000092C 9453                   MOV.W       L786,R4    ; H'7534
    0000092E 63F2                   MOV.L       @R15,R3
    00000930 3340                   CMP/EQ      R4,R3
    00000932 8B01                   BF          L740
      dl2_main.c   429                    {
      dl2_main.c   430                            return index;
    00000934 A005                   BRA         L741
    00000936 60E3                   MOV         R14,R0
    00000938              L740:                             
      dl2_main.c   431                    }
      dl2_main.c   432                    else if (key==KEY_CTRL_EXIT)
    00000938 944E                   MOV.W       L786+2,R4  ; H'7532
    0000093A 62F2                   MOV.L       @R15,R2
    0000093C 3240                   CMP/EQ      R4,R2
    0000093E 8B9B                   BF          L729
      dl2_main.c   433                    {
      dl2_main.c   434                            return -1;
      dl2_main.c   435                    }
      dl2_main.c   436            }
      dl2_main.c   437            return -1;
    00000940 E0FF                   MOV         #-1,R0
      dl2_main.c   438    }
    00000942              L741:                             
    00000942 7F1C                   ADD         #28,R15
    00000944 4F16                   LDS.L       @R15+,MACL
    00000946 4F26                   LDS.L       @R15+,PR
    00000948 68F6                   MOV.L       @R15+,R8
    0000094A 69F6                   MOV.L       @R15+,R9
    0000094C 6AF6                   MOV.L       @R15+,R10
    0000094E 6BF6                   MOV.L       @R15+,R11
    00000950 6CF6                   MOV.L       @R15+,R12
    00000952 6DF6                   MOV.L       @R15+,R13
    00000954 000B                   RTS
    00000956 6EF6                   MOV.L       @R15+,R14
      dl2_main.c   439    
      dl2_main.c   440    int AddIn_main(int isAppli, unsigned short OptionNum)
    00000958              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=548
    00000958 2FE6                   MOV.L       R14,@-R15
    0000095A 2FD6                   MOV.L       R13,@-R15
    0000095C 2FC6                   MOV.L       R12,@-R15
      dl2_main.c   441    {
      dl2_main.c   442            int menu_index = 0,r,temp_file_name[128];
    0000095E ED00                   MOV         #0,R13
    00000960 903B                   MOV.W       L786+4,R0  ; H'FE00
    00000962 2FB6                   MOV.L       R11,@-R15
    00000964 2FA6                   MOV.L       R10,@-R15
    00000966 2F96                   MOV.L       R9,@-R15
    00000968 2F86                   MOV.L       R8,@-R15
    0000096A 4F22                   STS.L       PR,@-R15
    0000096C D81C                   MOV.L       L786+10,R8 ; L487
    0000096E 3F0C                   ADD         R0,R15
    00000970 D91C                   MOV.L       L786+14,R9 ; L512




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000972 DB1D                   MOV.L       L786+18,R11; _open_font
    00000974 DC1D                   MOV.L       L786+22,R12; _usr_font
    00000976 DE1E                   MOV.L       L786+26,R14; _show_dialog
      dl2_main.c   443            
      dl2_main.c   444            //all_clr();
      dl2_main.c   445    
      dl2_main.c   446            sys_font = open_font(DEF_FONT_FILE_NAME);
    00000978 4B0B                   JSR         @R11
    0000097A 6483                   MOV         R8,R4
    0000097C D31D                   MOV.L       L786+30,R3 ; _sys_font
      dl2_main.c   447            if (sys_font == NULL)
    0000097E 2008                   TST         R0,R0
    00000980 8F08                   BF/S        L744
    00000982 2302                   MOV.L       R0,@R3
      dl2_main.c   448            {
      dl2_main.c   449                    printmini(0,0,(uchar*)DEF_FONT_FILE_NAME " not found.",MINI_OVER);
    00000984 D61C                   MOV.L       L786+34,R6 ; L550
    00000986 E500                   MOV         #0,R5
    00000988 D11C                   MOV.L       L786+38,R1 ; _PrintMini
    0000098A E710                   MOV         #16,R7
    0000098C 410B                   JSR         @R1
    0000098E 6453                   MOV         R5,R4
    00000990 A00D                   BRA         L578
    00000992 0009                   NOP
    00000994              L744:                             
      dl2_main.c   450                    waitkey();
      dl2_main.c   451                    return 0;
      dl2_main.c   452            }
      dl2_main.c   453            usr_font = open_font("\\\\fls0\\FONT12.dlf");
    00000994 D41A                   MOV.L       L786+42,R4 ; L491
    00000996 4B0B                   JSR         @R11
    00000998 0009                   NOP
      dl2_main.c   454            if (usr_font == NULL)
    0000099A 6203                   MOV         R0,R2
    0000099C 2228                   TST         R2,R2
    0000099E 8F0B                   BF/S        L746
    000009A0 2C02                   MOV.L       R0,@R12
      dl2_main.c   455            {
      dl2_main.c   456                    printmini(0,0,(uchar*)"FONT12.dlf not found.",MINI_OVER);
    000009A2 E710                   MOV         #16,R7
    000009A4 D617                   MOV.L       L786+46,R6 ; L552
    000009A6 E500                   MOV         #0,R5
    000009A8 D314                   MOV.L       L786+38,R3 ; _PrintMini
    000009AA 430B                   JSR         @R3
    000009AC 6453                   MOV         R5,R4
    000009AE              L578:
      dl2_main.c   457                    waitkey();
    000009AE D216                   MOV.L       L786+50,R2 ; _waitkey
    000009B0 420B                   JSR         @R2
    000009B2 0009                   NOP
    000009B4 A0D1                   BRA         L583
    000009B6 0009                   NOP
    000009B8              L746:                             
      dl2_main.c   458                    return 0;
      dl2_main.c   459            }
      dl2_main.c   460            
      dl2_main.c   461            page_offset = (word*)calloc(PAGE_MAX,sizeof(word));




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009B8 9410                   MOV.W       L786+6,R4  ; H'270F
    000009BA D314                   MOV.L       L786+54,R3 ; _calloc
    000009BC 430B                   JSR         @R3
    000009BE E502                   MOV         #2,R5
    000009C0 D213                   MOV.L       L786+58,R2 ; _page_offset
      dl2_main.c   462            if (page_offset==NULL)
    000009C2 2008                   TST         R0,R0
    000009C4 8F28                   BF/S        L749
    000009C6 2202                   MOV.L       R0,@R2
      dl2_main.c   463            {
      dl2_main.c   464                    show_dialog(" 错误 "," 内存不足 ",DLG_ICON_WARN,DLG_BTN_OK);
    000009C8 D512                   MOV.L       L786+62,R5 ; L518
    000009CA E702                   MOV         #2,R7
    000009CC E603                   MOV         #3,R6
    000009CE 4E0B                   JSR         @R14
    000009D0 6493                   MOV         R9,R4
    000009D2 A0C2                   BRA         L583
    000009D4 0009                   NOP
    000009D6              L786:                             
    000009D6 7534                   .DATA.W     H'7534
    000009D8 7532                   .DATA.W     H'7532
    000009DA FE00                   .DATA.W     H'FE00
    000009DC 270F                   .DATA.W     H'270F
    000009DE 0000                   .DATA.W     0
    000009E0 <00000000>             .DATA.L     L487
    000009E4 <00000000>             .DATA.L     L512
    000009E8 <00000000>             .DATA.L     _open_font
    000009EC <00000000>             .DATA.L     _usr_font
    000009F0 <00000000>             .DATA.L     _show_dialog
    000009F4 <00000000>             .DATA.L     _sys_font
    000009F8 <00000000>             .DATA.L     L550
    000009FC <00000000>             .DATA.L     _PrintMini
    00000A00 <00000000>             .DATA.L     L491
    00000A04 <00000000>             .DATA.L     L552
    00000A08 <00000000>             .DATA.L     _waitkey
    00000A0C <00000000>             .DATA.L     _calloc
    00000A10 <00000000>             .DATA.L     _page_offset
    00000A14 <00000000>             .DATA.L     L518
    00000A18              L749:                             
      dl2_main.c   465                    return 0;
      dl2_main.c   466            }
      dl2_main.c   467    
      dl2_main.c   468            while (1)
      dl2_main.c   469            {
      dl2_main.c   470                    all_clr();
    00000A18 DA3A                   MOV.L       L787,R10   ; _Bdisp_AllClr_VRAM
    00000A1A 4A0B                   JSR         @R10
    00000A1C 0009                   NOP
      dl2_main.c   471                    PrintXY(0,0,"   DLiterature 2.1.2",0);
    00000A1E E700                   MOV         #0,R7
    00000A20 D23A                   MOV.L       L787+8,R2  ; _PrintXY
    00000A22 6573                   MOV         R7,R5
    00000A24 D638                   MOV.L       L787+4,R6  ; L555
    00000A26 420B                   JSR         @R2
    00000A28 6473                   MOV         R7,R4
      dl2_main.c   472                    menu_index = show_menu (menu_index,4,MAIN_MENU_TEXT,24,16);
    00000A2A E310                   MOV         #16,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A2C DA38                   MOV.L       L787+12,R10; _MAIN_MENU_TEXT
    00000A2E E718                   MOV         #24,R7
    00000A30 2F36                   MOV.L       R3,@-R15
    00000A32 E504                   MOV         #4,R5
    00000A34 66A3                   MOV         R10,R6
    00000A36 BEDB                   BSR         _show_menu
    00000A38 64D3                   MOV         R13,R4
    00000A3A 7F04                   ADD         #4,R15
      dl2_main.c   473                    if (menu_index==-1) break;
    00000A3C 88FF                   CMP/EQ      #-1,R0
    00000A3E 8F02                   BF/S        L788
    00000A40 6D03                   MOV         R0,R13
    00000A42 A07F                   BRA         L751
    00000A44 0009                   NOP
    00000A46              L788:                             
      dl2_main.c   474                    else if (menu_index==0)
    00000A46 2DD8                   TST         R13,R13
    00000A48 8F13                   BF/S        L753
    00000A4A 6AF3                   MOV         R15,R10
      dl2_main.c   475                    {
      dl2_main.c   476                            r = file_view(1,"txt",temp_file_name);
    00000A4C D531                   MOV.L       L787+16,R5 ; L557
    00000A4E 66A3                   MOV         R10,R6
    00000A50 D331                   MOV.L       L787+20,R3 ; _file_view
    00000A52 430B                   JSR         @R3
    00000A54 E401                   MOV         #1,R4
      dl2_main.c   477                            if (r==1)                       start_read_text(temp_file_name);
    00000A56 8801                   CMP/EQ      #1,R0
    00000A58 8D16                   BT/S        L577
    00000A5A 6403                   MOV         R0,R4
      dl2_main.c   478                            else if (r==-1)         show_dialog(" 错误 "," 闪存中无此类文件 ",DLG_ICON_WARN,DL
                         +G_BTN_OK);
    00000A5C 6043                   MOV         R4,R0
    00000A5E 88FF                   CMP/EQ      #-1,R0
    00000A60 8BDA                   BF          L749
    00000A62 E702                   MOV         #2,R7
    00000A64 DA2D                   MOV.L       L787+24,R10; L558
    00000A66 E603                   MOV         #3,R6
    00000A68 65A3                   MOV         R10,R5
    00000A6A 4E0B                   JSR         @R14
    00000A6C 6493                   MOV         R9,R4
    00000A6E AFD3                   BRA         L749
    00000A70 0009                   NOP
    00000A72              L753:                             
      dl2_main.c   479                    }
      dl2_main.c   480                    else if (menu_index==1)
    00000A72 60D3                   MOV         R13,R0
    00000A74 8801                   CMP/EQ      #1,R0
    00000A76 8B16                   BF          L758
      dl2_main.c   481                    {
      dl2_main.c   482                            r = file_view(0,"txt",temp_file_name);
    00000A78 D526                   MOV.L       L787+16,R5 ; L557
    00000A7A 66A3                   MOV         R10,R6
    00000A7C D226                   MOV.L       L787+20,R2 ; _file_view
    00000A7E 420B                   JSR         @R2
    00000A80 E400                   MOV         #0,R4
      dl2_main.c   483                            if (r==1)                       start_read_text(temp_file_name);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A82 8801                   CMP/EQ      #1,R0
    00000A84 8F04                   BF/S        L759
    00000A86 6403                   MOV         R0,R4
    00000A88              L577:
    00000A88 BE42                   BSR         _start_read_text
    00000A8A 64A3                   MOV         R10,R4
    00000A8C AFC4                   BRA         L749
    00000A8E 0009                   NOP
    00000A90              L759:                             
      dl2_main.c   484                            else if (r==-1)         show_dialog(" 错误 "," SD卡中无此类文件 ",DLG_ICON_WARN,DL
                         +G_BTN_OK);
    00000A90 6043                   MOV         R4,R0
    00000A92 88FF                   CMP/EQ      #-1,R0
    00000A94 8BC0                   BF          L749
    00000A96 E702                   MOV         #2,R7
    00000A98 DA21                   MOV.L       L787+28,R10; L560
    00000A9A E603                   MOV         #3,R6
    00000A9C 65A3                   MOV         R10,R5
    00000A9E 4E0B                   JSR         @R14
    00000AA0 6493                   MOV         R9,R4
    00000AA2 AFB9                   BRA         L749
    00000AA4 0009                   NOP
    00000AA6              L758:                             
      dl2_main.c   485                    }
      dl2_main.c   486                    else if (menu_index==2)
    00000AA6 8802                   CMP/EQ      #2,R0
    00000AA8 8B21                   BF          L763
      dl2_main.c   487                    {
      dl2_main.c   488                            close_font(usr_font);
    00000AAA D31E                   MOV.L       L787+32,R3 ; _close_font
    00000AAC 430B                   JSR         @R3
    00000AAE 64C2                   MOV.L       @R12,R4
    00000AB0 DA1D                   MOV.L       L787+36,R10; _font_modle
    00000AB2 60A2                   MOV.L       @R10,R0
    00000AB4 880C                   CMP/EQ      #12,R0
    00000AB6 8F0B                   BF/S        L764
    00000AB8 6403                   MOV         R0,R4
      dl2_main.c   489                            if (font_modle == 12)
      dl2_main.c   490                            {
      dl2_main.c   491                                    usr_font = open_font("\\\\fls0\\FONT8.dlf");
    00000ABA 4B0B                   JSR         @R11
    00000ABC 6483                   MOV         R8,R4
      dl2_main.c   492                                    show_dialog(" 字体 ", "已更换为小字体.", 0, DLG_BTN_OK);
    00000ABE E702                   MOV         #2,R7
    00000AC0 D51A                   MOV.L       L787+40,R5 ; L489
    00000AC2 2C02                   MOV.L       R0,@R12
    00000AC4 D41A                   MOV.L       L787+44,R4 ; L488
    00000AC6 4E0B                   JSR         @R14
    00000AC8 E600                   MOV         #0,R6
      dl2_main.c   493                                    font_modle = 8;
    00000ACA E408                   MOV         #8,R4
    00000ACC AFA4                   BRA         L749
    00000ACE 2A42                   MOV.L       R4,@R10
    00000AD0              L764:                             
      dl2_main.c   494                            }
      dl2_main.c   495                            else if (font_modle == 8)
    00000AD0 6043                   MOV         R4,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AD2 8808                   CMP/EQ      #8,R0
    00000AD4 8BA0                   BF          L749
      dl2_main.c   496                            {
      dl2_main.c   497    
      dl2_main.c   498                                    usr_font = open_font("\\\\fls0\\FONT12.dlf");
    00000AD6 D417                   MOV.L       L787+48,R4 ; L491
    00000AD8 4B0B                   JSR         @R11
    00000ADA 0009                   NOP
    00000ADC 2C02                   MOV.L       R0,@R12
      dl2_main.c   499                                    show_dialog(" 字体 ", "已更换为大字体.", 0, DLG_BTN_OK);
    00000ADE E702                   MOV         #2,R7
    00000AE0 D515                   MOV.L       L787+52,R5 ; L494
    00000AE2 D413                   MOV.L       L787+44,R4 ; L488
    00000AE4 4E0B                   JSR         @R14
    00000AE6 E600                   MOV         #0,R6
      dl2_main.c   500                                    font_modle = 12;
    00000AE8 E40C                   MOV         #12,R4
    00000AEA AF95                   BRA         L749
    00000AEC 2A42                   MOV.L       R4,@R10
    00000AEE              L763:                             
      dl2_main.c   501                            }
      dl2_main.c   502                            
      dl2_main.c   503                    }
      dl2_main.c   504            
      dl2_main.c   505                    else if (menu_index==3)
    00000AEE 60D3                   MOV         R13,R0
    00000AF0 8803                   CMP/EQ      #3,R0
    00000AF2 8B91                   BF          L749
      dl2_main.c   506                    {
      dl2_main.c   507                            // about
      dl2_main.c   508                            show_dialog(" 关于 ","DLv2.1,作者直径君和diaowinner,此程序以MPL开源,github.com/dia
                         +owinner/DL",0,DLG_BTN_OK);
    00000AF4 DA11                   MOV.L       L787+56,R10; L395
    00000AF6 E702                   MOV         #2,R7
    00000AF8 D511                   MOV.L       L787+60,R5 ; L565
    00000AFA E600                   MOV         #0,R6
    00000AFC 4E0B                   JSR         @R14
    00000AFE 64A3                   MOV         R10,R4
    00000B00 AF8A                   BRA         L749
    00000B02 0009                   NOP
    00000B04              L787:                             
    00000B04 <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    00000B08 <00000000>             .DATA.L     L555
    00000B0C <00000000>             .DATA.L     _PrintXY
    00000B10 <00000000>             .DATA.L     _MAIN_MENU_TEXT
    00000B14 <00000000>             .DATA.L     L557
    00000B18 <00000000>             .DATA.L     _file_view
    00000B1C <00000000>             .DATA.L     L558
    00000B20 <00000000>             .DATA.L     L560
    00000B24 <00000000>             .DATA.L     _close_font
    00000B28 <00000000>             .DATA.L     _font_modle
    00000B2C <00000000>             .DATA.L     L489
    00000B30 <00000000>             .DATA.L     L488
    00000B34 <00000000>             .DATA.L     L491
    00000B38 <00000000>             .DATA.L     L494
    00000B3C <00000000>             .DATA.L     L395
    00000B40 <00000000>             .DATA.L     L565




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B44              L751:                             
      dl2_main.c   509                    }
      dl2_main.c   510    
      dl2_main.c   511            }
      dl2_main.c   512            // clean up
      dl2_main.c   513            free(page_offset);
    00000B44 D30B                   MOV.L       L789+2,R3  ; _page_offset
    00000B46 D20C                   MOV.L       L789+6,R2  ; _free
    00000B48 420B                   JSR         @R2
    00000B4A 6432                   MOV.L       @R3,R4
      dl2_main.c   514            close_font(sys_font);
    00000B4C D10B                   MOV.L       L789+10,R1 ; _sys_font
    00000B4E D30C                   MOV.L       L789+14,R3 ; _close_font
    00000B50 430B                   JSR         @R3
    00000B52 6412                   MOV.L       @R1,R4
      dl2_main.c   515            close_font(usr_font);
    00000B54 D20A                   MOV.L       L789+14,R2 ; _close_font
    00000B56 420B                   JSR         @R2
    00000B58 64C2                   MOV.L       @R12,R4
    00000B5A              L583:
      dl2_main.c   516    
      dl2_main.c   517            return 0;
    00000B5A E000                   MOV         #0,R0
      dl2_main.c   518    }
    00000B5C 9109                   MOV.W       L789,R1    ; H'0200
    00000B5E 3F1C                   ADD         R1,R15
    00000B60 4F26                   LDS.L       @R15+,PR
    00000B62 68F6                   MOV.L       @R15+,R8
    00000B64 69F6                   MOV.L       @R15+,R9
    00000B66 6AF6                   MOV.L       @R15+,R10
    00000B68 6BF6                   MOV.L       @R15+,R11
    00000B6A 6CF6                   MOV.L       @R15+,R12
    00000B6C 6DF6                   MOV.L       @R15+,R13
    00000B6E 000B                   RTS
    00000B70 6EF6                   MOV.L       @R15+,R14
    00000B72              L789:                             
    00000B72 0200                   .DATA.W     H'0200
    00000B74 <00000000>             .DATA.L     _page_offset
    00000B78 <00000000>             .DATA.L     _free
    00000B7C <00000000>             .DATA.L     _sys_font
    00000B80 <00000000>             .DATA.L     _close_font
      dl2_main.c   519    
      dl2_main.c   520    
      dl2_main.c   521    
      dl2_main.c   522    
      dl2_main.c   523    
      dl2_main.c   524    
      dl2_main.c   525    #pragma section _BR_Size
      dl2_main.c   526    unsigned long BR_Size;
      dl2_main.c   527    #pragma section
      dl2_main.c   528    #pragma section _TOP
      dl2_main.c   529    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
      dl2_main.c   530    {
      dl2_main.c   531        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L790+2,R3  ; _INIT_ADDIN_APPLICATION




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L790:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
      dl2_main.c   532    }
      dl2_main.c   533    #pragma section
      dl2_main.c   534    
D   00000000              _font_modle:                     ; static: font_modle
    00000000 0000000C               .DATA.L     H'0000000C
    00000004              _page_size:                      ; static: page_size
    00000004 00000000               .DATA.L     H'00000000
    00000008              _page_now:                       ; static: page_now
    00000008 00000000               .DATA.L     H'00000000
    0000000C              _file_size:                      ; static: file_size
    0000000C 00000000               .DATA.L     H'00000000
    00000010              _file_pos:                       ; static: file_pos
    00000010 00000000               .DATA.L     H'00000000
    00000014              _fh_txt:                         ; static: fh_txt
    00000014 00000000               .DATA.L     H'00000000
    00000018              _MAIN_MENU_TEXT:                 ; static: MAIN_MENU_TEXT
    00000018 <00000000>             .DATA.L     L392,L393,L394,L395
             <00000000>   
             <00000000>   
             <00000000>   
    00000028              _READ_MENU_TEXT:                 ; static: READ_MENU_TEXT
    00000028 <00000000>             .DATA.L     L397,L398,L399,L400,L401
             <00000000>   
             <00000000>   
             <00000000>   
             <00000000>   
C   00000000              L406:
    00000000 2E747874               .SDATA      ".txt"
    00000004 00                     .DATA.B     H'00
    00000005 00000001               .RES.B      1
    00000006 00000002               .RES.W      1
    00000008              L407:
    00000008 2E737674               .SDATA      ".svt"
    0000000C 00                     .DATA.B     H'00
    0000000D 00000001               .RES.B      1
    0000000E 00000002               .RES.W      1
    00000010              L457:
    00000010 202D25642D             .SDATA      " -%d- %04d/%04d  "
             2025303464   
             2F25303464   
             2020         
    00000021 00                     .DATA.B     H'00
    00000022 00000002               .RES.W      1
    00000024              L483:
    00000024 2020                   .SDATA      "  "
    00000026 B5B1C7B0D2             .DATA.B     H'B5,H'B1,H'C7,H'B0,H'D2,H'B3
             B3           
    0000002C 253034642F             .SDATA      "%04d/%04d"
             25303464     
    00000035 00                     .DATA.B     H'00
    00000036 00000002               .RES.W      1
    00000038              L487:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000038 5C5C666C73             .SDATA      "\\fls0\FONT8.dlf"
             305C464F4E   
             54382E646C   
             66           
    00000048 00                     .DATA.B     H'00
    00000049 00000001               .RES.B      1
    0000004A 00000002               .RES.W      1
    0000004C              L488:
    0000004C 20                     .SDATA      " "
    0000004D D7D6CCE5               .DATA.B     H'D7,H'D6,H'CC,H'E5
    00000051 20                     .SDATA      " "
    00000052 00                     .DATA.B     H'00
    00000053 00000001               .RES.B      1
    00000054              L489:
    00000054 D2D1B8FCBB             .DATA.B     H'D2,H'D1,H'B8,H'FC,H'BB,H'BB,H'CE,H'AA,H'D0,H'A1,H'D7,H'D6,H'CC,H'E5
             BBCEAAD0A1   
             D7D6CCE5     
    00000062 2E                     .SDATA      "."
    00000063 00                     .DATA.B     H'00
    00000064              L491:
    00000064 5C5C666C73             .SDATA      "\\fls0\FONT12.dlf"
             305C464F4E   
             5431322E64   
             6C66         
    00000075 00                     .DATA.B     H'00
    00000076 00000002               .RES.W      1
    00000078              L492:
    00000078 D2D1B8FCBB             .DATA.B     H'D2,H'D1,H'B8,H'FC,H'BB,H'BB,H'CE,H'AA,H'D6,H'D0,H'D7,H'D6,H'CC,H'E5
             BBCEAAD6D0   
             D7D6CCE5     
    00000086 2E                     .SDATA      "."
    00000087 00                     .DATA.B     H'00
    00000088              L494:
    00000088 D2D1B8FCBB             .DATA.B     H'D2,H'D1,H'B8,H'FC,H'BB,H'BB,H'CE,H'AA,H'B4,H'F3,H'D7,H'D6,H'CC,H'E5
             BBCEAAB4F3   
             D7D6CCE5     
    00000096 2E                     .SDATA      "."
    00000097 00                     .DATA.B     H'00
    00000098              L496:
    00000098 00                     .DATA.B     H'00
    00000099 00000001               .RES.B      1
    0000009A 00000002               .RES.W      1
    0000009C              L497:
    0000009C 20                     .SDATA      " "
    0000009D CAE4C8EBD2             .DATA.B     H'CA,H'E4,H'C8,H'EB,H'D2,H'B3,H'C2,H'EB
             B3C2EB       
    000000A5 20                     .SDATA      " "
    000000A6 00                     .DATA.B     H'00
    000000A7 00000001               .RES.B      1
    000000A8              L498:
    000000A8 2564                   .SDATA      "%d"
    000000AA 00                     .DATA.B     H'00
    000000AB 00000001               .RES.B      1
    000000AC              L502:
    000000AC B6C1C8A1CA             .DATA.B     H'B6,H'C1,H'C8,H'A1,H'CA,H'E9,H'C7,H'A9,H'00
             E9C7A900     
    000000B5 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000B6 00000002               .RES.W      1
    000000B8              L505:
    000000B8 B1A3B4E6CA             .DATA.B     H'B1,H'A3,H'B4,H'E6,H'CA,H'E9,H'C7,H'A9,H'00
             E9C7A900     
    000000C1 00000001               .RES.B      1
    000000C2 00000002               .RES.W      1
    000000C4              L512:
    000000C4 20                     .SDATA      " "
    000000C5 B4EDCEF3               .DATA.B     H'B4,H'ED,H'CE,H'F3
    000000C9 20                     .SDATA      " "
    000000CA 00                     .DATA.B     H'00
    000000CB 00000001               .RES.B      1
    000000CC              L513:
    000000CC 20                     .SDATA      " "
    000000CD D5D2B2BBB5             .DATA.B     H'D5,H'D2,H'B2,H'BB,H'B5,H'BD,H'CE,H'C4,H'BC,H'FE
             BDCEC4BCFE   
    000000D7 20                     .SDATA      " "
    000000D8 00                     .DATA.B     H'00
    000000D9 00000001               .RES.B      1
    000000DA 00000002               .RES.W      1
    000000DC              L514:
    000000DC 20                     .SDATA      " "
    000000DD B7D6D2B3D6             .DATA.B     H'B7,H'D6,H'D2,H'B3,H'D6,H'D0
             D0           
    000000E3 20                     .SDATA      " "
    000000E4 00                     .DATA.B     H'00
    000000E5 00000001               .RES.B      1
    000000E6 00000002               .RES.W      1
    000000E8              L515:
    000000E8 20                     .SDATA      " "
    000000E9 C7EBC9D4B5             .DATA.B     H'C7,H'EB,H'C9,H'D4,H'B5,H'C8
             C8           
    000000EF 20                     .SDATA      " "
    000000F0 00                     .DATA.B     H'00
    000000F1 00000001               .RES.B      1
    000000F2 00000002               .RES.W      1
    000000F4              L517:
    000000F4 20                     .SDATA      " "
    000000F5 D2B3CAFDB9             .DATA.B     H'D2,H'B3,H'CA,H'FD,H'B9,H'FD,H'B6,H'E0
             FDB6E0       
    000000FD 20                     .SDATA      " "
    000000FE 00                     .DATA.B     H'00
    000000FF 00000001               .RES.B      1
    00000100              L518:
    00000100 20                     .SDATA      " "
    00000101 C4DAB4E6B2             .DATA.B     H'C4,H'DA,H'B4,H'E6,H'B2,H'BB,H'D7,H'E3
             BBD7E3       
    00000109 20                     .SDATA      " "
    0000010A 00                     .DATA.B     H'00
    0000010B 00000001               .RES.B      1
    0000010C              L550:
    0000010C 5C5C666C73             .SDATA      "\\fls0\FONT8.dlf not found."
             305C464F4E   
             54382E646C   
             66206E6F74   
             20666F756E   
             642E         




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000127 00                     .DATA.B     H'00
    00000128              L552:
    00000128 464F4E5431             .SDATA      "FONT12.dlf not found."
             322E646C66   
             206E6F7420   
             666F756E64   
             2E           
    0000013D 00                     .DATA.B     H'00
    0000013E 00000002               .RES.W      1
    00000140              L555:
    00000140 202020444C             .SDATA      "   DLiterature 2.1.2"
             6974657261   
             7475726520   
             322E312E32   
    00000154 00                     .DATA.B     H'00
    00000155 00000001               .RES.B      1
    00000156 00000002               .RES.W      1
    00000158              L557:
    00000158 747874                 .SDATA      "txt"
    0000015B 00                     .DATA.B     H'00
    0000015C              L558:
    0000015C 20                     .SDATA      " "
    0000015D C9C1B4E6D6             .DATA.B     H'C9,H'C1,H'B4,H'E6,H'D6,H'D0,H'CE,H'DE,H'B4,H'CB,H'C0,H'E0,H'CE,H'C4,H'BC,H'FE
             D0CEDEB4CB   
             C0E0CEC4BC   
             FE           
    0000016D 20                     .SDATA      " "
    0000016E 00                     .DATA.B     H'00
    0000016F 00000001               .RES.B      1
    00000170              L560:
    00000170 205344                 .SDATA      " SD"
    00000173 BFA8D6D0CE             .DATA.B     H'BF,H'A8,H'D6,H'D0,H'CE,H'DE,H'B4,H'CB,H'C0,H'E0,H'CE,H'C4,H'BC,H'FE
             DEB4CBC0E0   
             CEC4BCFE     
    00000181 20                     .SDATA      " "
    00000182 00                     .DATA.B     H'00
    00000183 00000001               .RES.B      1
    00000184              L565:
    00000184 444C76322E             .SDATA      "DLv2.1,"
             312C         
    0000018B D7F7D5DFD6             .DATA.B     H'D7,H'F7,H'D5,H'DF,H'D6,H'B1,H'BE,H'B6,H'BE,H'FD,H'BA,H'CD
             B1BEB6BEFD   
             BACD         
    00000197 6469616F77             .SDATA      "diaowinner,"
             696E6E6572   
             2C           
    000001A2 B4CBB3CCD0             .DATA.B     H'B4,H'CB,H'B3,H'CC,H'D0,H'F2,H'D2,H'D4
             F2D2D4       
    000001AA 4D504C                 .SDATA      "MPL"
    000001AD BFAAD4B4               .DATA.B     H'BF,H'AA,H'D4,H'B4
    000001B1 2C67697468             .SDATA      ",github.com/diaowinner/DL"
             75622E636F   
             6D2F646961   
             6F77696E6E   
             65722F444C   
    000001CA 00                     .DATA.B     H'00
    000001CB 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001CC              L392:
    000001CC 20                     .SDATA      " "
    000001CD B4F2BFAAC9             .DATA.B     H'B4,H'F2,H'BF,H'AA,H'C9,H'C1,H'B4,H'E6,H'CE,H'C4,H'BC,H'FE
             C1B4E6CEC4   
             BCFE         
    000001D9 20                     .SDATA      " "
    000001DA 00                     .DATA.B     H'00
    000001DB 00000001               .RES.B      1
    000001DC              L393:
    000001DC 20                     .SDATA      " "
    000001DD B4F2BFAA               .DATA.B     H'B4,H'F2,H'BF,H'AA
    000001E1 5344                   .SDATA      "SD"
    000001E3 BFA8CEC4BC             .DATA.B     H'BF,H'A8,H'CE,H'C4,H'BC,H'FE
             FE           
    000001E9 20                     .SDATA      " "
    000001EA 00                     .DATA.B     H'00
    000001EB 00000001               .RES.B      1
    000001EC              L394:
    000001EC 20                     .SDATA      " "
    000001ED B8FCB8C4D4             .DATA.B     H'B8,H'FC,H'B8,H'C4,H'D4,H'C4,H'B6,H'C1,H'D7,H'D6,H'CC,H'E5
             C4B6C1D7D6   
             CCE5         
    000001F9 20                     .SDATA      " "
    000001FA 00                     .DATA.B     H'00
    000001FB 00000001               .RES.B      1
    000001FC              L395:
    000001FC 20                     .SDATA      " "
    000001FD B9D8D3DA               .DATA.B     H'B9,H'D8,H'D3,H'DA
    00000201 20                     .SDATA      " "
    00000202 00                     .DATA.B     H'00
    00000203 00000001               .RES.B      1
    00000204              L397:
    00000204 20                     .SDATA      " "
    00000205 B8FCB8C4D7             .DATA.B     H'B8,H'FC,H'B8,H'C4,H'D7,H'D6,H'CC,H'E5
             D6CCE5       
    0000020D 20                     .SDATA      " "
    0000020E 00                     .DATA.B     H'00
    0000020F 00000001               .RES.B      1
    00000210              L398:
    00000210 20                     .SDATA      " "
    00000211 CCF8D2B3               .DATA.B     H'CC,H'F8,H'D2,H'B3
    00000215 20                     .SDATA      " "
    00000216 00                     .DATA.B     H'00
    00000217 00000001               .RES.B      1
    00000218              L399:
    00000218 20                     .SDATA      " "
    00000219 B6C1C8A1CA             .DATA.B     H'B6,H'C1,H'C8,H'A1,H'CA,H'E9,H'C7,H'A9
             E9C7A9       
    00000221 20                     .SDATA      " "
    00000222 00                     .DATA.B     H'00
    00000223 00000001               .RES.B      1
    00000224              L400:
    00000224 20                     .SDATA      " "
    00000225 B1A3B4E6CA             .DATA.B     H'B1,H'A3,H'B4,H'E6,H'CA,H'E9,H'C7,H'A9
             E9C7A9       
    0000022D 20                     .SDATA      " "
    0000022E 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000022F 00000001               .RES.B      1
    00000230              L401:
    00000230 20                     .SDATA      " "
    00000231 CDCBB3F6               .DATA.B     H'CD,H'CB,H'B3,H'F6
    00000235 20                     .SDATA      " "
    00000236 00                     .DATA.B     H'00
B   00000000              _page_offset:                    ; static: page_offset
    00000000 00000004               .RES.L      1
    00000004              _file_name:                      ; static: file_name
    00000004 00000004               .RES.L      1
    00000008              _mark:                           ; static: mark
    00000008 00000014               .RES.L      5
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1















































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 12-Apr-2020 22:57:11  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        39




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      534



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000B84 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               00000237 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               0000003C Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               0000001C Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000E23 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           35
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          22
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           187






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\ADMINI~1\AppData\Local\Temp\hmk39AD.tmp 

